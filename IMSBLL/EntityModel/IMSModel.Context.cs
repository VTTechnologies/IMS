//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IMSBLL.EntityModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class IMS_TESTEntities : DbContext
    {
        public IMS_TESTEntities()
            : base("name=IMS_TESTEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tbl_ActualPurchaseTaxAndPrice> tbl_ActualPurchaseTaxAndPrice { get; set; }
        public virtual DbSet<tbl_ActualSalesTaxAndPrice> tbl_ActualSalesTaxAndPrice { get; set; }
        public virtual DbSet<tbl_batch> tbl_batch { get; set; }
        public virtual DbSet<tbl_branch> tbl_branch { get; set; }
        public virtual DbSet<tbl_category> tbl_category { get; set; }
        public virtual DbSet<tbl_company> tbl_company { get; set; }
        public virtual DbSet<tbl_country> tbl_country { get; set; }
        public virtual DbSet<Tbl_EmailVerify> Tbl_EmailVerify { get; set; }
        public virtual DbSet<tbl_error_log> tbl_error_log { get; set; }
        public virtual DbSet<tbl_expense> tbl_expense { get; set; }
        public virtual DbSet<tbl_expenseentry> tbl_expenseentry { get; set; }
        public virtual DbSet<tbl_financialyear> tbl_financialyear { get; set; }
        public virtual DbSet<tbl_godown> tbl_godown { get; set; }
        public virtual DbSet<tbl_mony> tbl_mony { get; set; }
        public virtual DbSet<tbl_monytransaction> tbl_monytransaction { get; set; }
        public virtual DbSet<tbl_paidpayment> tbl_paidpayment { get; set; }
        public virtual DbSet<tbl_party> tbl_party { get; set; }
        public virtual DbSet<tbl_paymentmode> tbl_paymentmode { get; set; }
        public virtual DbSet<tbl_plan> tbl_plan { get; set; }
        public virtual DbSet<tbl_product> tbl_product { get; set; }
        public virtual DbSet<tbl_purchase> tbl_purchase { get; set; }
        public virtual DbSet<tbl_purchasedetails> tbl_purchasedetails { get; set; }
        public virtual DbSet<tbl_purchasedetailsHistory> tbl_purchasedetailsHistory { get; set; }
        public virtual DbSet<tbl_purchaseHistory> tbl_purchaseHistory { get; set; }
        public virtual DbSet<tbl_PurchasePaymentDetials> tbl_PurchasePaymentDetials { get; set; }
        public virtual DbSet<tbl_PurchasePaymentDetialsHistory> tbl_PurchasePaymentDetialsHistory { get; set; }
        public virtual DbSet<tbl_purchasereturn> tbl_purchasereturn { get; set; }
        public virtual DbSet<tbl_purchasereturndetails> tbl_purchasereturndetails { get; set; }
        public virtual DbSet<tbl_purchasereturndetailsHistory> tbl_purchasereturndetailsHistory { get; set; }
        public virtual DbSet<tbl_purchasereturnHistory> tbl_purchasereturnHistory { get; set; }
        public virtual DbSet<tbl_rack> tbl_rack { get; set; }
        public virtual DbSet<tbl_role> tbl_role { get; set; }
        public virtual DbSet<tbl_sale> tbl_sale { get; set; }
        public virtual DbSet<tbl_saledetails> tbl_saledetails { get; set; }
        public virtual DbSet<tbl_saledetailsHistory> tbl_saledetailsHistory { get; set; }
        public virtual DbSet<tbl_saleHistory> tbl_saleHistory { get; set; }
        public virtual DbSet<tbl_SalePaymentDetails> tbl_SalePaymentDetails { get; set; }
        public virtual DbSet<tbl_SalePaymentDetailsHistory> tbl_SalePaymentDetailsHistory { get; set; }
        public virtual DbSet<tbl_salereturn> tbl_salereturn { get; set; }
        public virtual DbSet<tbl_salereturndetails> tbl_salereturndetails { get; set; }
        public virtual DbSet<tbl_salereturndetailsHistory> tbl_salereturndetailsHistory { get; set; }
        public virtual DbSet<tbl_salereturnHistory> tbl_salereturnHistory { get; set; }
        public virtual DbSet<tbl_state> tbl_state { get; set; }
        public virtual DbSet<tbl_stock> tbl_stock { get; set; }
        public virtual DbSet<tbl_stocktransaction> tbl_stocktransaction { get; set; }
        public virtual DbSet<tbl_subscription> tbl_subscription { get; set; }
        public virtual DbSet<tbl_tax> tbl_tax { get; set; }
        public virtual DbSet<tbl_taxdetails> tbl_taxdetails { get; set; }
        public virtual DbSet<tbl_taxgroup> tbl_taxgroup { get; set; }
        public virtual DbSet<tbl_taxtype> tbl_taxtype { get; set; }
        public virtual DbSet<tbl_unit> tbl_unit { get; set; }
        public virtual DbSet<tbl_User> tbl_User { get; set; }
        public virtual DbSet<tbl_userbranch> tbl_userbranch { get; set; }
        public virtual DbSet<tbl_userrole> tbl_userrole { get; set; }
        public virtual DbSet<Tbl_VerifyResetPass> Tbl_VerifyResetPass { get; set; }
        public virtual DbSet<View_PurchaseDetails> View_PurchaseDetails { get; set; }
        public virtual DbSet<View_SaleDetails> View_SaleDetails { get; set; }
    
        public virtual ObjectResult<CommonReport_Result> CommonReport(string reportType, Nullable<int> companyId, string filterIds, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var reportTypeParameter = reportType != null ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(string));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var filterIdsParameter = filterIds != null ?
                new ObjectParameter("FilterIds", filterIds) :
                new ObjectParameter("FilterIds", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CommonReport_Result>("CommonReport", reportTypeParameter, companyIdParameter, filterIdsParameter, start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> GetBatchwiseQuantity(Nullable<int> batch_id, Nullable<int> product_id)
        {
            var batch_idParameter = batch_id.HasValue ?
                new ObjectParameter("batch_id", batch_id) :
                new ObjectParameter("batch_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GetBatchwiseQuantity", batch_idParameter, product_idParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> GetReturnQuantity(Nullable<int> id, string @for, Nullable<int> productId, Nullable<int> companyId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var forParameter = @for != null ?
                new ObjectParameter("For", @for) :
                new ObjectParameter("For", typeof(string));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GetReturnQuantity", idParameter, forParameter, productIdParameter, companyIdParameter);
        }
    
        public virtual int InventoryReport(Nullable<int> companyId, Nullable<int> partyId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var partyIdParameter = partyId.HasValue ?
                new ObjectParameter("PartyId", partyId) :
                new ObjectParameter("PartyId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InventoryReport", companyIdParameter, partyIdParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int PaymentBalanceReport(Nullable<int> companyId, Nullable<int> partyId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var partyIdParameter = partyId.HasValue ?
                new ObjectParameter("PartyId", partyId) :
                new ObjectParameter("PartyId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PaymentBalanceReport", companyIdParameter, partyIdParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<ProductReport_Result> ProductReport(Nullable<int> companyId)
        {
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductReport_Result>("ProductReport", companyIdParameter);
        }
    
        public virtual ObjectResult<PurchaseOrPurchaseReturnReport_Result> PurchaseOrPurchaseReturnReport(Nullable<int> id, string fromTable)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fromTableParameter = fromTable != null ?
                new ObjectParameter("FromTable", fromTable) :
                new ObjectParameter("FromTable", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PurchaseOrPurchaseReturnReport_Result>("PurchaseOrPurchaseReturnReport", idParameter, fromTableParameter);
        }
    
        public virtual ObjectResult<SaleOrderReport_Result> SaleOrderReport(Nullable<int> saleId)
        {
            var saleIdParameter = saleId.HasValue ?
                new ObjectParameter("SaleId", saleId) :
                new ObjectParameter("SaleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SaleOrderReport_Result>("SaleOrderReport", saleIdParameter);
        }
    
        public virtual ObjectResult<SaleOrPurchaseOrReturnReport_Result> SaleOrPurchaseOrReturnReport(Nullable<int> id, string fromTable)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fromTableParameter = fromTable != null ?
                new ObjectParameter("FromTable", fromTable) :
                new ObjectParameter("FromTable", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SaleOrPurchaseOrReturnReport_Result>("SaleOrPurchaseOrReturnReport", idParameter, fromTableParameter);
        }
    
        public virtual ObjectResult<SaleOrSaleReturnReport_Result> SaleOrSaleReturnReport(Nullable<int> id, string fromTable)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var fromTableParameter = fromTable != null ?
                new ObjectParameter("FromTable", fromTable) :
                new ObjectParameter("FromTable", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SaleOrSaleReturnReport_Result>("SaleOrSaleReturnReport", idParameter, fromTableParameter);
        }
    
        public virtual ObjectResult<SaleReport_Result> SaleReport(Nullable<int> saledetails_id)
        {
            var saledetails_idParameter = saledetails_id.HasValue ?
                new ObjectParameter("saledetails_id", saledetails_id) :
                new ObjectParameter("saledetails_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SaleReport_Result>("SaleReport", saledetails_idParameter);
        }
    
        public virtual ObjectResult<sp_ActiveUser_Result> sp_ActiveUser(Nullable<int> userid, string uniqueid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var uniqueidParameter = uniqueid != null ?
                new ObjectParameter("uniqueid", uniqueid) :
                new ObjectParameter("uniqueid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ActiveUser_Result>("sp_ActiveUser", useridParameter, uniqueidParameter);
        }
    
        public virtual int sp_AddUser2(string user_name, string user_emailid, string user_mobileno, string password, Nullable<int> role_id, Nullable<int> branch_id, Nullable<int> company_id, Nullable<bool> status, string created_by, Nullable<System.DateTime> created_date, string first_name, string last_name)
        {
            var user_nameParameter = user_name != null ?
                new ObjectParameter("user_name", user_name) :
                new ObjectParameter("user_name", typeof(string));
    
            var user_emailidParameter = user_emailid != null ?
                new ObjectParameter("user_emailid", user_emailid) :
                new ObjectParameter("user_emailid", typeof(string));
    
            var user_mobilenoParameter = user_mobileno != null ?
                new ObjectParameter("user_mobileno", user_mobileno) :
                new ObjectParameter("user_mobileno", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var role_idParameter = role_id.HasValue ?
                new ObjectParameter("role_id", role_id) :
                new ObjectParameter("role_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddUser2", user_nameParameter, user_emailidParameter, user_mobilenoParameter, passwordParameter, role_idParameter, branch_idParameter, company_idParameter, statusParameter, created_byParameter, created_dateParameter, first_nameParameter, last_nameParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_BatchInsert(Nullable<int> company_id, Nullable<int> branch_id, string batch_name, Nullable<bool> status, string created_by, Nullable<System.DateTime> created_date, string modified_by, Nullable<System.DateTime> modified_date)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var batch_nameParameter = batch_name != null ?
                new ObjectParameter("batch_name", batch_name) :
                new ObjectParameter("batch_name", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var modified_byParameter = modified_by != null ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(string));
    
            var modified_dateParameter = modified_date.HasValue ?
                new ObjectParameter("modified_date", modified_date) :
                new ObjectParameter("modified_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_BatchInsert", company_idParameter, branch_idParameter, batch_nameParameter, statusParameter, created_byParameter, created_dateParameter, modified_byParameter, modified_dateParameter);
        }
    
        public virtual int sp_CategoryInsert(Nullable<int> company_id, Nullable<int> branch_id, string category_name, Nullable<bool> status, string created_by, Nullable<System.DateTime> created_date, string modified_by, Nullable<System.DateTime> modified_date)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var category_nameParameter = category_name != null ?
                new ObjectParameter("category_name", category_name) :
                new ObjectParameter("category_name", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var modified_byParameter = modified_by != null ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(string));
    
            var modified_dateParameter = modified_date.HasValue ?
                new ObjectParameter("modified_date", modified_date) :
                new ObjectParameter("modified_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CategoryInsert", company_idParameter, branch_idParameter, category_nameParameter, statusParameter, created_byParameter, created_dateParameter, modified_byParameter, modified_dateParameter);
        }
    
        public virtual int sp_checklicense(Nullable<int> company_id, Nullable<int> user_id, ObjectParameter free_count, ObjectParameter subscription_count)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_checklicense", company_idParameter, user_idParameter, free_count, subscription_count);
        }
    
        public virtual ObjectResult<string> sp_checkrackingodown(Nullable<int> company_id, Nullable<int> godown_id, string value)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var godown_idParameter = godown_id.HasValue ?
                new ObjectParameter("godown_id", godown_id) :
                new ObjectParameter("godown_id", typeof(int));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_checkrackingodown", company_idParameter, godown_idParameter, valueParameter);
        }
    
        public virtual ObjectResult<Sp_checkResetPwdlink_Result> Sp_checkResetPwdlink(Nullable<int> userid, string uniqueid, Nullable<int> pid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var uniqueidParameter = uniqueid != null ?
                new ObjectParameter("uniqueid", uniqueid) :
                new ObjectParameter("uniqueid", typeof(string));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_checkResetPwdlink_Result>("Sp_checkResetPwdlink", useridParameter, uniqueidParameter, pidParameter);
        }
    
        public virtual ObjectResult<string> sp_checkuser(string user_Emai)
        {
            var user_EmaiParameter = user_Emai != null ?
                new ObjectParameter("user_Emai", user_Emai) :
                new ObjectParameter("user_Emai", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_checkuser", user_EmaiParameter);
        }
    
        public virtual ObjectResult<string> sp_checkusermobil(string user_mobieno)
        {
            var user_mobienoParameter = user_mobieno != null ?
                new ObjectParameter("user_mobieno", user_mobieno) :
                new ObjectParameter("user_mobieno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_checkusermobil", user_mobienoParameter);
        }
    
        public virtual int sp_CompanyInsert(string company_name, string owner_emailid, string owner_mobileno, Nullable<int> country_id, string pincode, string created_by, Nullable<System.DateTime> created_date, string first_name, string last_name)
        {
            var company_nameParameter = company_name != null ?
                new ObjectParameter("company_name", company_name) :
                new ObjectParameter("company_name", typeof(string));
    
            var owner_emailidParameter = owner_emailid != null ?
                new ObjectParameter("owner_emailid", owner_emailid) :
                new ObjectParameter("owner_emailid", typeof(string));
    
            var owner_mobilenoParameter = owner_mobileno != null ?
                new ObjectParameter("owner_mobileno", owner_mobileno) :
                new ObjectParameter("owner_mobileno", typeof(string));
    
            var country_idParameter = country_id.HasValue ?
                new ObjectParameter("country_id", country_id) :
                new ObjectParameter("country_id", typeof(int));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("pincode", pincode) :
                new ObjectParameter("pincode", typeof(string));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CompanyInsert", company_nameParameter, owner_emailidParameter, owner_mobilenoParameter, country_idParameter, pincodeParameter, created_byParameter, created_dateParameter, first_nameParameter, last_nameParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<sp_dashboarddata_Result> sp_dashboarddata(Nullable<int> conpanyid)
        {
            var conpanyidParameter = conpanyid.HasValue ?
                new ObjectParameter("conpanyid", conpanyid) :
                new ObjectParameter("conpanyid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_dashboarddata_Result>("sp_dashboarddata", conpanyidParameter);
        }
    
        public virtual int sp_Deletebatch(Nullable<int> company_id, Nullable<int> batch_id, Nullable<int> branch_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var batch_idParameter = batch_id.HasValue ?
                new ObjectParameter("batch_id", batch_id) :
                new ObjectParameter("batch_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Deletebatch", company_idParameter, batch_idParameter, branch_idParameter);
        }
    
        public virtual int sp_DeleteBranch(Nullable<int> branch_id, Nullable<int> company_id)
        {
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteBranch", branch_idParameter, company_idParameter);
        }
    
        public virtual int sp_DeleteCategory(Nullable<int> company_id, Nullable<int> category_id, Nullable<int> branch_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var category_idParameter = category_id.HasValue ?
                new ObjectParameter("category_id", category_id) :
                new ObjectParameter("category_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteCategory", company_idParameter, category_idParameter, branch_idParameter);
        }
    
        public virtual int sp_DeleteExpense(Nullable<int> company_id, Nullable<int> branch_id, Nullable<int> expense_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var expense_idParameter = expense_id.HasValue ?
                new ObjectParameter("expense_id", expense_id) :
                new ObjectParameter("expense_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteExpense", company_idParameter, branch_idParameter, expense_idParameter);
        }
    
        public virtual int sp_DeleteFyear(Nullable<int> company_id, Nullable<int> branch_id, Nullable<int> financialyear_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var financialyear_idParameter = financialyear_id.HasValue ?
                new ObjectParameter("financialyear_id", financialyear_id) :
                new ObjectParameter("financialyear_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteFyear", company_idParameter, branch_idParameter, financialyear_idParameter);
        }
    
        public virtual int sp_DeleteGodown(Nullable<int> company_id, Nullable<int> branch_id, Nullable<int> godown_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var godown_idParameter = godown_id.HasValue ?
                new ObjectParameter("godown_id", godown_id) :
                new ObjectParameter("godown_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteGodown", company_idParameter, branch_idParameter, godown_idParameter);
        }
    
        public virtual int sp_DeleteParty(Nullable<int> company_id, Nullable<int> branch_id, Nullable<int> party_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var party_idParameter = party_id.HasValue ?
                new ObjectParameter("party_id", party_id) :
                new ObjectParameter("party_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteParty", company_idParameter, branch_idParameter, party_idParameter);
        }
    
        public virtual int sp_DeletePMode(Nullable<int> company_id, Nullable<int> branch_id, Nullable<int> paymentode_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var paymentode_idParameter = paymentode_id.HasValue ?
                new ObjectParameter("paymentode_id", paymentode_id) :
                new ObjectParameter("paymentode_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeletePMode", company_idParameter, branch_idParameter, paymentode_idParameter);
        }
    
        public virtual int sp_DeleteProduct(Nullable<int> company_id, Nullable<int> product_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteProduct", company_idParameter, product_idParameter);
        }
    
        public virtual int sp_DeletePurchasedetailbyreutrn(Nullable<int> purchase_id, Nullable<int> purchasedetails_id)
        {
            var purchase_idParameter = purchase_id.HasValue ?
                new ObjectParameter("purchase_id", purchase_id) :
                new ObjectParameter("purchase_id", typeof(int));
    
            var purchasedetails_idParameter = purchasedetails_id.HasValue ?
                new ObjectParameter("purchasedetails_id", purchasedetails_id) :
                new ObjectParameter("purchasedetails_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeletePurchasedetailbyreutrn", purchase_idParameter, purchasedetails_idParameter);
        }
    
        public virtual int sp_DeleteRack(Nullable<int> company_id, Nullable<int> branch_id, Nullable<int> rack_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var rack_idParameter = rack_id.HasValue ?
                new ObjectParameter("rack_id", rack_id) :
                new ObjectParameter("rack_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteRack", company_idParameter, branch_idParameter, rack_idParameter);
        }
    
        public virtual int sp_deleteSladetail(Nullable<int> sale_id, Nullable<int> saledetails_id)
        {
            var sale_idParameter = sale_id.HasValue ?
                new ObjectParameter("sale_id", sale_id) :
                new ObjectParameter("sale_id", typeof(int));
    
            var saledetails_idParameter = saledetails_id.HasValue ?
                new ObjectParameter("saledetails_id", saledetails_id) :
                new ObjectParameter("saledetails_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteSladetail", sale_idParameter, saledetails_idParameter);
        }
    
        public virtual int sp_DeleteTax(Nullable<int> company_id, Nullable<int> branch_id, Nullable<int> tax_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var tax_idParameter = tax_id.HasValue ?
                new ObjectParameter("tax_id", tax_id) :
                new ObjectParameter("tax_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteTax", company_idParameter, branch_idParameter, tax_idParameter);
        }
    
        public virtual int sp_DeleteUnit(Nullable<int> company_id, Nullable<int> branch_id, Nullable<int> unit_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var unit_idParameter = unit_id.HasValue ?
                new ObjectParameter("unit_id", unit_id) :
                new ObjectParameter("unit_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteUnit", company_idParameter, branch_idParameter, unit_idParameter);
        }
    
        public virtual int sp_DeleteUser(Nullable<int> company_id, Nullable<int> userbranch_id, Nullable<int> user_id, Nullable<int> branch_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var userbranch_idParameter = userbranch_id.HasValue ?
                new ObjectParameter("userbranch_id", userbranch_id) :
                new ObjectParameter("userbranch_id", typeof(int));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteUser", company_idParameter, userbranch_idParameter, user_idParameter, branch_idParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_ExpenseInsert(Nullable<int> company_id, Nullable<int> branch_id, string expense_name, Nullable<bool> status, string created_by, Nullable<System.DateTime> created_date, string modified_by, Nullable<System.DateTime> modified_date)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var expense_nameParameter = expense_name != null ?
                new ObjectParameter("expense_name", expense_name) :
                new ObjectParameter("expense_name", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var modified_byParameter = modified_by != null ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(string));
    
            var modified_dateParameter = modified_date.HasValue ?
                new ObjectParameter("modified_date", modified_date) :
                new ObjectParameter("modified_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ExpenseInsert", company_idParameter, branch_idParameter, expense_nameParameter, statusParameter, created_byParameter, created_dateParameter, modified_byParameter, modified_dateParameter);
        }
    
        public virtual int sp_FyInsert(Nullable<int> company_id, Nullable<int> branch_id, string start_date, string end_date, string created_by, Nullable<System.DateTime> created_date)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var start_dateParameter = start_date != null ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(string));
    
            var end_dateParameter = end_date != null ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(string));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_FyInsert", company_idParameter, branch_idParameter, start_dateParameter, end_dateParameter, created_byParameter, created_dateParameter);
        }
    
        public virtual ObjectResult<string> Sp_GetExistsMobile(string user_mobieno)
        {
            var user_mobienoParameter = user_mobieno != null ?
                new ObjectParameter("user_mobieno", user_mobieno) :
                new ObjectParameter("user_mobieno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_GetExistsMobile", user_mobienoParameter);
        }
    
        public virtual ObjectResult<sp_GetPurchaseDetailsById_Result> sp_GetPurchaseDetailsById(Nullable<int> purchsae_id)
        {
            var purchsae_idParameter = purchsae_id.HasValue ?
                new ObjectParameter("purchsae_id", purchsae_id) :
                new ObjectParameter("purchsae_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetPurchaseDetailsById_Result>("sp_GetPurchaseDetailsById", purchsae_idParameter);
        }
    
        public virtual ObjectResult<sp_GetSaleDetailsById_Result> sp_GetSaleDetailsById(Nullable<int> saleId)
        {
            var saleIdParameter = saleId.HasValue ?
                new ObjectParameter("saleId", saleId) :
                new ObjectParameter("saleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetSaleDetailsById_Result>("sp_GetSaleDetailsById", saleIdParameter);
        }
    
        public virtual int sp_godowninsert(Nullable<int> company_id, Nullable<int> branch_id, string godown_name, string godown_address, string contact_no, string contact_person, Nullable<bool> status, string created_by, Nullable<System.DateTime> created_date, string modified_by, Nullable<System.DateTime> modified_date)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var godown_nameParameter = godown_name != null ?
                new ObjectParameter("godown_name", godown_name) :
                new ObjectParameter("godown_name", typeof(string));
    
            var godown_addressParameter = godown_address != null ?
                new ObjectParameter("godown_address", godown_address) :
                new ObjectParameter("godown_address", typeof(string));
    
            var contact_noParameter = contact_no != null ?
                new ObjectParameter("contact_no", contact_no) :
                new ObjectParameter("contact_no", typeof(string));
    
            var contact_personParameter = contact_person != null ?
                new ObjectParameter("contact_person", contact_person) :
                new ObjectParameter("contact_person", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var modified_byParameter = modified_by != null ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(string));
    
            var modified_dateParameter = modified_date.HasValue ?
                new ObjectParameter("modified_date", modified_date) :
                new ObjectParameter("modified_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_godowninsert", company_idParameter, branch_idParameter, godown_nameParameter, godown_addressParameter, contact_noParameter, contact_personParameter, statusParameter, created_byParameter, created_dateParameter, modified_byParameter, modified_dateParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_insert_purchase_return(Nullable<int> purchasedetails_id, Nullable<int> purchasereturn_id, Nullable<int> batch_id, Nullable<int> product_id, Nullable<decimal> tax_amt, Nullable<decimal> quantity, Nullable<decimal> amount, string created_by, string created_date)
        {
            var purchasedetails_idParameter = purchasedetails_id.HasValue ?
                new ObjectParameter("purchasedetails_id", purchasedetails_id) :
                new ObjectParameter("purchasedetails_id", typeof(int));
    
            var purchasereturn_idParameter = purchasereturn_id.HasValue ?
                new ObjectParameter("purchasereturn_id", purchasereturn_id) :
                new ObjectParameter("purchasereturn_id", typeof(int));
    
            var batch_idParameter = batch_id.HasValue ?
                new ObjectParameter("batch_id", batch_id) :
                new ObjectParameter("batch_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var tax_amtParameter = tax_amt.HasValue ?
                new ObjectParameter("tax_amt", tax_amt) :
                new ObjectParameter("tax_amt", typeof(decimal));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(decimal));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var created_dateParameter = created_date != null ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert_purchase_return", purchasedetails_idParameter, purchasereturn_idParameter, batch_idParameter, product_idParameter, tax_amtParameter, quantityParameter, amountParameter, created_byParameter, created_dateParameter);
        }
    
        public virtual int sp_InsertBranch(Nullable<int> company_id, string branch_name, string branch_address, string pincode, string telephone_no, string fax_no, Nullable<int> country_id, Nullable<int> state_id, string city, string created_by, Nullable<System.DateTime> created_date)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_nameParameter = branch_name != null ?
                new ObjectParameter("branch_name", branch_name) :
                new ObjectParameter("branch_name", typeof(string));
    
            var branch_addressParameter = branch_address != null ?
                new ObjectParameter("branch_address", branch_address) :
                new ObjectParameter("branch_address", typeof(string));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("pincode", pincode) :
                new ObjectParameter("pincode", typeof(string));
    
            var telephone_noParameter = telephone_no != null ?
                new ObjectParameter("telephone_no", telephone_no) :
                new ObjectParameter("telephone_no", typeof(string));
    
            var fax_noParameter = fax_no != null ?
                new ObjectParameter("fax_no", fax_no) :
                new ObjectParameter("fax_no", typeof(string));
    
            var country_idParameter = country_id.HasValue ?
                new ObjectParameter("country_id", country_id) :
                new ObjectParameter("country_id", typeof(int));
    
            var state_idParameter = state_id.HasValue ?
                new ObjectParameter("state_id", state_id) :
                new ObjectParameter("state_id", typeof(int));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertBranch", company_idParameter, branch_nameParameter, branch_addressParameter, pincodeParameter, telephone_noParameter, fax_noParameter, country_idParameter, state_idParameter, cityParameter, created_byParameter, created_dateParameter);
        }
    
        public virtual int sp_InsertMonyTransaction(Nullable<int> company_id, Nullable<int> branch_id, Nullable<int> party_id, Nullable<decimal> given_amt, Nullable<decimal> grand_total, Nullable<decimal> balance_amt, string in_out, Nullable<int> paymentmode_id, string transaction_typ, Nullable<int> transactio_type_id, string created_by, Nullable<System.DateTime> created_date)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var party_idParameter = party_id.HasValue ?
                new ObjectParameter("party_id", party_id) :
                new ObjectParameter("party_id", typeof(int));
    
            var given_amtParameter = given_amt.HasValue ?
                new ObjectParameter("given_amt", given_amt) :
                new ObjectParameter("given_amt", typeof(decimal));
    
            var grand_totalParameter = grand_total.HasValue ?
                new ObjectParameter("grand_total", grand_total) :
                new ObjectParameter("grand_total", typeof(decimal));
    
            var balance_amtParameter = balance_amt.HasValue ?
                new ObjectParameter("balance_amt", balance_amt) :
                new ObjectParameter("balance_amt", typeof(decimal));
    
            var in_outParameter = in_out != null ?
                new ObjectParameter("in_out", in_out) :
                new ObjectParameter("in_out", typeof(string));
    
            var paymentmode_idParameter = paymentmode_id.HasValue ?
                new ObjectParameter("paymentmode_id", paymentmode_id) :
                new ObjectParameter("paymentmode_id", typeof(int));
    
            var transaction_typParameter = transaction_typ != null ?
                new ObjectParameter("transaction_typ", transaction_typ) :
                new ObjectParameter("transaction_typ", typeof(string));
    
            var transactio_type_idParameter = transactio_type_id.HasValue ?
                new ObjectParameter("transactio_type_id", transactio_type_id) :
                new ObjectParameter("transactio_type_id", typeof(int));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertMonyTransaction", company_idParameter, branch_idParameter, party_idParameter, given_amtParameter, grand_totalParameter, balance_amtParameter, in_outParameter, paymentmode_idParameter, transaction_typParameter, transactio_type_idParameter, created_byParameter, created_dateParameter);
        }
    
        public virtual int sp_insertpurchasereturnmain(Nullable<int> company_id, Nullable<int> branch_id, Nullable<int> purchase_id, Nullable<decimal> total_tax, Nullable<decimal> actual_amount, Nullable<decimal> grand_total, Nullable<decimal> total_discount, string created_by, Nullable<System.DateTime> created_date, ObjectParameter purchasereturnmain_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var purchase_idParameter = purchase_id.HasValue ?
                new ObjectParameter("purchase_id", purchase_id) :
                new ObjectParameter("purchase_id", typeof(int));
    
            var total_taxParameter = total_tax.HasValue ?
                new ObjectParameter("total_tax", total_tax) :
                new ObjectParameter("total_tax", typeof(decimal));
    
            var actual_amountParameter = actual_amount.HasValue ?
                new ObjectParameter("actual_amount", actual_amount) :
                new ObjectParameter("actual_amount", typeof(decimal));
    
            var grand_totalParameter = grand_total.HasValue ?
                new ObjectParameter("grand_total", grand_total) :
                new ObjectParameter("grand_total", typeof(decimal));
    
            var total_discountParameter = total_discount.HasValue ?
                new ObjectParameter("total_discount", total_discount) :
                new ObjectParameter("total_discount", typeof(decimal));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertpurchasereturnmain", company_idParameter, branch_idParameter, purchase_idParameter, total_taxParameter, actual_amountParameter, grand_totalParameter, total_discountParameter, created_byParameter, created_dateParameter, purchasereturnmain_id);
        }
    
        public virtual ObjectResult<Sp_InsertResetPass_Result> Sp_InsertResetPass(string email, string uniqueid, Nullable<System.DateTime> created_date)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var uniqueidParameter = uniqueid != null ?
                new ObjectParameter("uniqueid", uniqueid) :
                new ObjectParameter("uniqueid", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_InsertResetPass_Result>("Sp_InsertResetPass", emailParameter, uniqueidParameter, created_dateParameter);
        }
    
        public virtual int sp_InsertSaleTransaction(Nullable<int> company_id, Nullable<int> branch_id, Nullable<int> product_id, Nullable<int> bacth_id, string in_out, Nullable<decimal> qty, Nullable<int> transactio_type_id, string stocktransaction_typ, string created_by, Nullable<System.DateTime> created_date)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var bacth_idParameter = bacth_id.HasValue ?
                new ObjectParameter("bacth_id", bacth_id) :
                new ObjectParameter("bacth_id", typeof(int));
    
            var in_outParameter = in_out != null ?
                new ObjectParameter("in_out", in_out) :
                new ObjectParameter("in_out", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(decimal));
    
            var transactio_type_idParameter = transactio_type_id.HasValue ?
                new ObjectParameter("transactio_type_id", transactio_type_id) :
                new ObjectParameter("transactio_type_id", typeof(int));
    
            var stocktransaction_typParameter = stocktransaction_typ != null ?
                new ObjectParameter("stocktransaction_typ", stocktransaction_typ) :
                new ObjectParameter("stocktransaction_typ", typeof(string));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertSaleTransaction", company_idParameter, branch_idParameter, product_idParameter, bacth_idParameter, in_outParameter, qtyParameter, transactio_type_idParameter, stocktransaction_typParameter, created_byParameter, created_dateParameter);
        }
    
        public virtual int sp_insertsalreturnmain(Nullable<int> company_id, Nullable<int> branch_id, Nullable<int> sale_id, Nullable<decimal> total_tax, Nullable<decimal> actual_amount, Nullable<decimal> grand_total, Nullable<decimal> total_discount, string created_by, Nullable<System.DateTime> created_date, ObjectParameter salereturnmain_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var sale_idParameter = sale_id.HasValue ?
                new ObjectParameter("sale_id", sale_id) :
                new ObjectParameter("sale_id", typeof(int));
    
            var total_taxParameter = total_tax.HasValue ?
                new ObjectParameter("total_tax", total_tax) :
                new ObjectParameter("total_tax", typeof(decimal));
    
            var actual_amountParameter = actual_amount.HasValue ?
                new ObjectParameter("actual_amount", actual_amount) :
                new ObjectParameter("actual_amount", typeof(decimal));
    
            var grand_totalParameter = grand_total.HasValue ?
                new ObjectParameter("grand_total", grand_total) :
                new ObjectParameter("grand_total", typeof(decimal));
    
            var total_discountParameter = total_discount.HasValue ?
                new ObjectParameter("total_discount", total_discount) :
                new ObjectParameter("total_discount", typeof(decimal));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insertsalreturnmain", company_idParameter, branch_idParameter, sale_idParameter, total_taxParameter, actual_amountParameter, grand_totalParameter, total_discountParameter, created_byParameter, created_dateParameter, salereturnmain_id);
        }
    
        public virtual int sp_InsertTransaction(Nullable<int> company_id, Nullable<int> branch_id, Nullable<int> product_id, Nullable<int> bacth_id, string in_out, Nullable<decimal> qty, Nullable<int> transactio_type_id, string stocktransaction_typ, string created_by, Nullable<System.DateTime> created_date)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var bacth_idParameter = bacth_id.HasValue ?
                new ObjectParameter("bacth_id", bacth_id) :
                new ObjectParameter("bacth_id", typeof(int));
    
            var in_outParameter = in_out != null ?
                new ObjectParameter("in_out", in_out) :
                new ObjectParameter("in_out", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("qty", qty) :
                new ObjectParameter("qty", typeof(decimal));
    
            var transactio_type_idParameter = transactio_type_id.HasValue ?
                new ObjectParameter("transactio_type_id", transactio_type_id) :
                new ObjectParameter("transactio_type_id", typeof(int));
    
            var stocktransaction_typParameter = stocktransaction_typ != null ?
                new ObjectParameter("stocktransaction_typ", stocktransaction_typ) :
                new ObjectParameter("stocktransaction_typ", typeof(string));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertTransaction", company_idParameter, branch_idParameter, product_idParameter, bacth_idParameter, in_outParameter, qtyParameter, transactio_type_idParameter, stocktransaction_typParameter, created_byParameter, created_dateParameter);
        }
    
        public virtual int sp_last15daysf_year(Nullable<int> company_id, ObjectParameter days_flag, ObjectParameter enddays_flag, Nullable<System.DateTime> s_date, ObjectParameter days_left)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var s_dateParameter = s_date.HasValue ?
                new ObjectParameter("s_date", s_date) :
                new ObjectParameter("s_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_last15daysf_year", company_idParameter, days_flag, enddays_flag, s_dateParameter, days_left);
        }
    
        public virtual int sp_PartyInsert(Nullable<int> company_id, Nullable<int> branch_id, string party_name, string party_address, string contact_no, string gstin_no, string party_type, Nullable<bool> status, Nullable<int> state_id, string created_by, Nullable<System.DateTime> created_date)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var party_nameParameter = party_name != null ?
                new ObjectParameter("party_name", party_name) :
                new ObjectParameter("party_name", typeof(string));
    
            var party_addressParameter = party_address != null ?
                new ObjectParameter("party_address", party_address) :
                new ObjectParameter("party_address", typeof(string));
    
            var contact_noParameter = contact_no != null ?
                new ObjectParameter("contact_no", contact_no) :
                new ObjectParameter("contact_no", typeof(string));
    
            var gstin_noParameter = gstin_no != null ?
                new ObjectParameter("gstin_no", gstin_no) :
                new ObjectParameter("gstin_no", typeof(string));
    
            var party_typeParameter = party_type != null ?
                new ObjectParameter("party_type", party_type) :
                new ObjectParameter("party_type", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var state_idParameter = state_id.HasValue ?
                new ObjectParameter("state_id", state_id) :
                new ObjectParameter("state_id", typeof(int));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PartyInsert", company_idParameter, branch_idParameter, party_nameParameter, party_addressParameter, contact_noParameter, gstin_noParameter, party_typeParameter, statusParameter, state_idParameter, created_byParameter, created_dateParameter);
        }
    
        public virtual ObjectResult<sp_partyprint_Result> sp_partyprint(Nullable<int> company_id, Nullable<int> branch_id, Nullable<int> party_id, string party_type)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var party_idParameter = party_id.HasValue ?
                new ObjectParameter("party_id", party_id) :
                new ObjectParameter("party_id", typeof(int));
    
            var party_typeParameter = party_type != null ?
                new ObjectParameter("party_type", party_type) :
                new ObjectParameter("party_type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_partyprint_Result>("sp_partyprint", company_idParameter, branch_idParameter, party_idParameter, party_typeParameter);
        }
    
        public virtual int sp_PaymentModeInsert(Nullable<int> company_id, Nullable<int> branch_id, string paymentmode_name, Nullable<bool> status, string created_by, Nullable<System.DateTime> created_date, string modified_by, Nullable<System.DateTime> modified_date)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var paymentmode_nameParameter = paymentmode_name != null ?
                new ObjectParameter("paymentmode_name", paymentmode_name) :
                new ObjectParameter("paymentmode_name", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var modified_byParameter = modified_by != null ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(string));
    
            var modified_dateParameter = modified_date.HasValue ?
                new ObjectParameter("modified_date", modified_date) :
                new ObjectParameter("modified_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PaymentModeInsert", company_idParameter, branch_idParameter, paymentmode_nameParameter, statusParameter, created_byParameter, created_dateParameter, modified_byParameter, modified_dateParameter);
        }
    
        public virtual ObjectResult<sp_planall_Result> sp_planall()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_planall_Result>("sp_planall");
        }
    
        public virtual ObjectResult<sp_product_relorderlevel_report_companybranch_Result> sp_product_relorderlevel_report_companybranch(Nullable<int> company_id, Nullable<int> branch_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_product_relorderlevel_report_companybranch_Result>("sp_product_relorderlevel_report_companybranch", company_idParameter, branch_idParameter);
        }
    
        public virtual ObjectResult<sp_product_relorderlevel_report_forcompany_only_Result> sp_product_relorderlevel_report_forcompany_only(Nullable<int> company_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_product_relorderlevel_report_forcompany_only_Result>("sp_product_relorderlevel_report_forcompany_only", company_idParameter);
        }
    
        public virtual int sp_ProductInsert(Nullable<int> company_id, Nullable<int> branch_id, Nullable<int> category_id, Nullable<int> unit_id, Nullable<int> godown_id, Nullable<int> rack_id, Nullable<int> tax_id, Nullable<int> reorder_level, string product_name, string product_code, string hsn_code, Nullable<decimal> purchas_price, Nullable<decimal> sales_price, Nullable<bool> status, string created_by, Nullable<System.DateTime> created_date, string modified_by, Nullable<System.DateTime> modified_date)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var category_idParameter = category_id.HasValue ?
                new ObjectParameter("category_id", category_id) :
                new ObjectParameter("category_id", typeof(int));
    
            var unit_idParameter = unit_id.HasValue ?
                new ObjectParameter("unit_id", unit_id) :
                new ObjectParameter("unit_id", typeof(int));
    
            var godown_idParameter = godown_id.HasValue ?
                new ObjectParameter("godown_id", godown_id) :
                new ObjectParameter("godown_id", typeof(int));
    
            var rack_idParameter = rack_id.HasValue ?
                new ObjectParameter("rack_id", rack_id) :
                new ObjectParameter("rack_id", typeof(int));
    
            var tax_idParameter = tax_id.HasValue ?
                new ObjectParameter("tax_id", tax_id) :
                new ObjectParameter("tax_id", typeof(int));
    
            var reorder_levelParameter = reorder_level.HasValue ?
                new ObjectParameter("reorder_level", reorder_level) :
                new ObjectParameter("reorder_level", typeof(int));
    
            var product_nameParameter = product_name != null ?
                new ObjectParameter("product_name", product_name) :
                new ObjectParameter("product_name", typeof(string));
    
            var product_codeParameter = product_code != null ?
                new ObjectParameter("product_code", product_code) :
                new ObjectParameter("product_code", typeof(string));
    
            var hsn_codeParameter = hsn_code != null ?
                new ObjectParameter("hsn_code", hsn_code) :
                new ObjectParameter("hsn_code", typeof(string));
    
            var purchas_priceParameter = purchas_price.HasValue ?
                new ObjectParameter("purchas_price", purchas_price) :
                new ObjectParameter("purchas_price", typeof(decimal));
    
            var sales_priceParameter = sales_price.HasValue ?
                new ObjectParameter("sales_price", sales_price) :
                new ObjectParameter("sales_price", typeof(decimal));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var modified_byParameter = modified_by != null ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(string));
    
            var modified_dateParameter = modified_date.HasValue ?
                new ObjectParameter("modified_date", modified_date) :
                new ObjectParameter("modified_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProductInsert", company_idParameter, branch_idParameter, category_idParameter, unit_idParameter, godown_idParameter, rack_idParameter, tax_idParameter, reorder_levelParameter, product_nameParameter, product_codeParameter, hsn_codeParameter, purchas_priceParameter, sales_priceParameter, statusParameter, created_byParameter, created_dateParameter, modified_byParameter, modified_dateParameter);
        }
    
        public virtual ObjectResult<sp_productwithquantity_Result> sp_productwithquantity(Nullable<int> company_id, Nullable<int> branch_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_productwithquantity_Result>("sp_productwithquantity", company_idParameter, branch_idParameter);
        }
    
        public virtual int sp_PurchaseDetailinsert(Nullable<int> product_id, Nullable<int> purchase_id, Nullable<int> batch_id, Nullable<int> user_id, string created_date, Nullable<decimal> tax_amt, Nullable<decimal> dicount_amt, Nullable<decimal> quantity, Nullable<decimal> amount, Nullable<decimal> purchase_rate, Nullable<decimal> sale_rate, ObjectParameter purchasedetails_id)
        {
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var purchase_idParameter = purchase_id.HasValue ?
                new ObjectParameter("purchase_id", purchase_id) :
                new ObjectParameter("purchase_id", typeof(int));
    
            var batch_idParameter = batch_id.HasValue ?
                new ObjectParameter("batch_id", batch_id) :
                new ObjectParameter("batch_id", typeof(int));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var created_dateParameter = created_date != null ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(string));
    
            var tax_amtParameter = tax_amt.HasValue ?
                new ObjectParameter("tax_amt", tax_amt) :
                new ObjectParameter("tax_amt", typeof(decimal));
    
            var dicount_amtParameter = dicount_amt.HasValue ?
                new ObjectParameter("dicount_amt", dicount_amt) :
                new ObjectParameter("dicount_amt", typeof(decimal));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(decimal));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var purchase_rateParameter = purchase_rate.HasValue ?
                new ObjectParameter("purchase_rate", purchase_rate) :
                new ObjectParameter("purchase_rate", typeof(decimal));
    
            var sale_rateParameter = sale_rate.HasValue ?
                new ObjectParameter("sale_rate", sale_rate) :
                new ObjectParameter("sale_rate", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_PurchaseDetailinsert", product_idParameter, purchase_idParameter, batch_idParameter, user_idParameter, created_dateParameter, tax_amtParameter, dicount_amtParameter, quantityParameter, amountParameter, purchase_rateParameter, sale_rateParameter, purchasedetails_id);
        }
    
        public virtual int sp_Purchaseinsert(Nullable<int> company_id, Nullable<int> branch_id, Nullable<int> party_id, string po_no, string po_Date, Nullable<decimal> total_tax, Nullable<decimal> total_amnt, Nullable<decimal> grand_total, Nullable<decimal> total_discount, string created_by, Nullable<System.DateTime> created_date, string invoiceNumber, Nullable<int> paymentMode_id, Nullable<decimal> given_amnt, Nullable<decimal> balance_amnt, ObjectParameter purchase_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var party_idParameter = party_id.HasValue ?
                new ObjectParameter("party_id", party_id) :
                new ObjectParameter("party_id", typeof(int));
    
            var po_noParameter = po_no != null ?
                new ObjectParameter("po_no", po_no) :
                new ObjectParameter("po_no", typeof(string));
    
            var po_DateParameter = po_Date != null ?
                new ObjectParameter("Po_Date", po_Date) :
                new ObjectParameter("Po_Date", typeof(string));
    
            var total_taxParameter = total_tax.HasValue ?
                new ObjectParameter("total_tax", total_tax) :
                new ObjectParameter("total_tax", typeof(decimal));
    
            var total_amntParameter = total_amnt.HasValue ?
                new ObjectParameter("total_amnt", total_amnt) :
                new ObjectParameter("total_amnt", typeof(decimal));
    
            var grand_totalParameter = grand_total.HasValue ?
                new ObjectParameter("grand_total", grand_total) :
                new ObjectParameter("grand_total", typeof(decimal));
    
            var total_discountParameter = total_discount.HasValue ?
                new ObjectParameter("total_discount", total_discount) :
                new ObjectParameter("total_discount", typeof(decimal));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var invoiceNumberParameter = invoiceNumber != null ?
                new ObjectParameter("InvoiceNumber", invoiceNumber) :
                new ObjectParameter("InvoiceNumber", typeof(string));
    
            var paymentMode_idParameter = paymentMode_id.HasValue ?
                new ObjectParameter("PaymentMode_id", paymentMode_id) :
                new ObjectParameter("PaymentMode_id", typeof(int));
    
            var given_amntParameter = given_amnt.HasValue ?
                new ObjectParameter("given_amnt", given_amnt) :
                new ObjectParameter("given_amnt", typeof(decimal));
    
            var balance_amntParameter = balance_amnt.HasValue ?
                new ObjectParameter("balance_amnt", balance_amnt) :
                new ObjectParameter("balance_amnt", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Purchaseinsert", company_idParameter, branch_idParameter, party_idParameter, po_noParameter, po_DateParameter, total_taxParameter, total_amntParameter, grand_totalParameter, total_discountParameter, created_byParameter, created_dateParameter, invoiceNumberParameter, paymentMode_idParameter, given_amntParameter, balance_amntParameter, purchase_id);
        }
    
        public virtual int sp_rackInsert(Nullable<int> company_id, Nullable<int> branch_id, Nullable<int> godown_id, string rack_name, Nullable<bool> status, string created_by, Nullable<System.DateTime> created_date, string modified_by, Nullable<System.DateTime> modified_date)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var godown_idParameter = godown_id.HasValue ?
                new ObjectParameter("godown_id", godown_id) :
                new ObjectParameter("godown_id", typeof(int));
    
            var rack_nameParameter = rack_name != null ?
                new ObjectParameter("rack_name", rack_name) :
                new ObjectParameter("rack_name", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var modified_byParameter = modified_by != null ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(string));
    
            var modified_dateParameter = modified_date.HasValue ?
                new ObjectParameter("modified_date", modified_date) :
                new ObjectParameter("modified_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_rackInsert", company_idParameter, branch_idParameter, godown_idParameter, rack_nameParameter, statusParameter, created_byParameter, created_dateParameter, modified_byParameter, modified_dateParameter);
        }
    
        public virtual ObjectResult<sp_Register_Result> sp_Register(string company_name, string first_name, string last_name, string owner_emailid, string owner_mobileno, string user_password, Nullable<int> country_id, string pincode, string created_by, Nullable<System.DateTime> created_date, string start_date, string end_date, string uniqueidentity)
        {
            var company_nameParameter = company_name != null ?
                new ObjectParameter("company_name", company_name) :
                new ObjectParameter("company_name", typeof(string));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var owner_emailidParameter = owner_emailid != null ?
                new ObjectParameter("owner_emailid", owner_emailid) :
                new ObjectParameter("owner_emailid", typeof(string));
    
            var owner_mobilenoParameter = owner_mobileno != null ?
                new ObjectParameter("owner_mobileno", owner_mobileno) :
                new ObjectParameter("owner_mobileno", typeof(string));
    
            var user_passwordParameter = user_password != null ?
                new ObjectParameter("user_password", user_password) :
                new ObjectParameter("user_password", typeof(string));
    
            var country_idParameter = country_id.HasValue ?
                new ObjectParameter("country_id", country_id) :
                new ObjectParameter("country_id", typeof(int));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("pincode", pincode) :
                new ObjectParameter("pincode", typeof(string));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var start_dateParameter = start_date != null ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(string));
    
            var end_dateParameter = end_date != null ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(string));
    
            var uniqueidentityParameter = uniqueidentity != null ?
                new ObjectParameter("uniqueidentity", uniqueidentity) :
                new ObjectParameter("uniqueidentity", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Register_Result>("sp_Register", company_nameParameter, first_nameParameter, last_nameParameter, owner_emailidParameter, owner_mobilenoParameter, user_passwordParameter, country_idParameter, pincodeParameter, created_byParameter, created_dateParameter, start_dateParameter, end_dateParameter, uniqueidentityParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_salereturn(Nullable<int> sale_id, Nullable<int> saledetails_id, Nullable<int> product_id, Nullable<int> batch_id, Nullable<decimal> tax_amt, Nullable<decimal> dicount_amt, Nullable<int> quantity, Nullable<decimal> amount, Nullable<decimal> price, string created_by, string created_date)
        {
            var sale_idParameter = sale_id.HasValue ?
                new ObjectParameter("sale_id", sale_id) :
                new ObjectParameter("sale_id", typeof(int));
    
            var saledetails_idParameter = saledetails_id.HasValue ?
                new ObjectParameter("saledetails_id", saledetails_id) :
                new ObjectParameter("saledetails_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var batch_idParameter = batch_id.HasValue ?
                new ObjectParameter("batch_id", batch_id) :
                new ObjectParameter("batch_id", typeof(int));
    
            var tax_amtParameter = tax_amt.HasValue ?
                new ObjectParameter("tax_amt", tax_amt) :
                new ObjectParameter("tax_amt", typeof(decimal));
    
            var dicount_amtParameter = dicount_amt.HasValue ?
                new ObjectParameter("dicount_amt", dicount_amt) :
                new ObjectParameter("dicount_amt", typeof(decimal));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var created_dateParameter = created_date != null ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_salereturn", sale_idParameter, saledetails_idParameter, product_idParameter, batch_idParameter, tax_amtParameter, dicount_amtParameter, quantityParameter, amountParameter, priceParameter, created_byParameter, created_dateParameter);
        }
    
        public virtual int sp_SalesDetailinsert(Nullable<int> product_id, Nullable<int> sale_id, Nullable<int> batch_id, Nullable<int> user_id, string created_date, Nullable<decimal> tax_amt, Nullable<decimal> dicount_amt, Nullable<decimal> quantity, Nullable<decimal> amount, Nullable<decimal> price, ObjectParameter saledetails_id)
        {
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var sale_idParameter = sale_id.HasValue ?
                new ObjectParameter("sale_id", sale_id) :
                new ObjectParameter("sale_id", typeof(int));
    
            var batch_idParameter = batch_id.HasValue ?
                new ObjectParameter("batch_id", batch_id) :
                new ObjectParameter("batch_id", typeof(int));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var created_dateParameter = created_date != null ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(string));
    
            var tax_amtParameter = tax_amt.HasValue ?
                new ObjectParameter("tax_amt", tax_amt) :
                new ObjectParameter("tax_amt", typeof(decimal));
    
            var dicount_amtParameter = dicount_amt.HasValue ?
                new ObjectParameter("dicount_amt", dicount_amt) :
                new ObjectParameter("dicount_amt", typeof(decimal));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(decimal));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SalesDetailinsert", product_idParameter, sale_idParameter, batch_idParameter, user_idParameter, created_dateParameter, tax_amtParameter, dicount_amtParameter, quantityParameter, amountParameter, priceParameter, saledetails_id);
        }
    
        public virtual int sp_Salesinsert(Nullable<int> company_id, Nullable<int> branch_id, Nullable<int> party_id, string invoice_no, Nullable<decimal> total_tax, Nullable<decimal> actual_amount, Nullable<decimal> grand_total, Nullable<decimal> total_discount, string created_by, Nullable<System.DateTime> created_date, string invoiceNumber, ObjectParameter sale_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var party_idParameter = party_id.HasValue ?
                new ObjectParameter("party_id", party_id) :
                new ObjectParameter("party_id", typeof(int));
    
            var invoice_noParameter = invoice_no != null ?
                new ObjectParameter("invoice_no", invoice_no) :
                new ObjectParameter("invoice_no", typeof(string));
    
            var total_taxParameter = total_tax.HasValue ?
                new ObjectParameter("total_tax", total_tax) :
                new ObjectParameter("total_tax", typeof(decimal));
    
            var actual_amountParameter = actual_amount.HasValue ?
                new ObjectParameter("actual_amount", actual_amount) :
                new ObjectParameter("actual_amount", typeof(decimal));
    
            var grand_totalParameter = grand_total.HasValue ?
                new ObjectParameter("grand_total", grand_total) :
                new ObjectParameter("grand_total", typeof(decimal));
    
            var total_discountParameter = total_discount.HasValue ?
                new ObjectParameter("total_discount", total_discount) :
                new ObjectParameter("total_discount", typeof(decimal));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var invoiceNumberParameter = invoiceNumber != null ?
                new ObjectParameter("InvoiceNumber", invoiceNumber) :
                new ObjectParameter("InvoiceNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Salesinsert", company_idParameter, branch_idParameter, party_idParameter, invoice_noParameter, total_taxParameter, actual_amountParameter, grand_totalParameter, total_discountParameter, created_byParameter, created_dateParameter, invoiceNumberParameter, sale_id);
        }
    
        public virtual int sp_SalesreturnProduct(Nullable<int> salereturnmain_id)
        {
            var salereturnmain_idParameter = salereturnmain_id.HasValue ?
                new ObjectParameter("salereturnmain_id", salereturnmain_id) :
                new ObjectParameter("salereturnmain_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SalesreturnProduct", salereturnmain_idParameter);
        }
    
        public virtual int sp_saveerror(Nullable<int> company_id, Nullable<int> branch_id, string error_type, string error_msg, string created_by, Nullable<System.DateTime> created_date)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var error_typeParameter = error_type != null ?
                new ObjectParameter("error_type", error_type) :
                new ObjectParameter("error_type", typeof(string));
    
            var error_msgParameter = error_msg != null ?
                new ObjectParameter("error_msg", error_msg) :
                new ObjectParameter("error_msg", typeof(string));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_saveerror", company_idParameter, branch_idParameter, error_typeParameter, error_msgParameter, created_byParameter, created_dateParameter);
        }
    
        public virtual ObjectResult<sp_SelectBatch_Result> sp_SelectBatch(Nullable<int> company_id, Nullable<int> branch_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectBatch_Result>("sp_SelectBatch", company_idParameter, branch_idParameter);
        }
    
        public virtual ObjectResult<sp_selectbatchbyproduct_Result> sp_selectbatchbyproduct(Nullable<int> company_id, Nullable<int> branch_id, Nullable<int> product_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_selectbatchbyproduct_Result>("sp_selectbatchbyproduct", company_idParameter, branch_idParameter, product_idParameter);
        }
    
        public virtual ObjectResult<sp_selectbatchwisequantity_Result> sp_selectbatchwisequantity(Nullable<int> batch_id, Nullable<int> product_id)
        {
            var batch_idParameter = batch_id.HasValue ?
                new ObjectParameter("batch_id", batch_id) :
                new ObjectParameter("batch_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_selectbatchwisequantity_Result>("sp_selectbatchwisequantity", batch_idParameter, product_idParameter);
        }
    
        public virtual ObjectResult<sp_SelectBranch_Result> sp_SelectBranch(Nullable<int> company_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectBranch_Result>("sp_SelectBranch", company_idParameter);
        }
    
        public virtual ObjectResult<string> sp_SelectBranchName(Nullable<int> company_id, string value)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_SelectBranchName", company_idParameter, valueParameter);
        }
    
        public virtual ObjectResult<sp_SelectCategory_Result> sp_SelectCategory(Nullable<int> company_id, Nullable<int> branch_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectCategory_Result>("sp_SelectCategory", company_idParameter, branch_idParameter);
        }
    
        public virtual ObjectResult<sp_SelectCompany_Result> sp_SelectCompany(Nullable<int> company_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectCompany_Result>("sp_SelectCompany", company_idParameter);
        }
    
        public virtual ObjectResult<string> sp_SelectCompany_name(Nullable<int> user_id)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_SelectCompany_name", user_idParameter);
        }
    
        public virtual ObjectResult<string> sp_selectcompanylogo(Nullable<int> company_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_selectcompanylogo", company_idParameter);
        }
    
        public virtual ObjectResult<sp_SelectCountry_Result> sp_SelectCountry()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectCountry_Result>("sp_SelectCountry");
        }
    
        public virtual ObjectResult<sp_SelectExpense_Result> sp_SelectExpense(Nullable<int> company_id, Nullable<int> branch_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectExpense_Result>("sp_SelectExpense", company_idParameter, branch_idParameter);
        }
    
        public virtual ObjectResult<sp_SelectFinicialyeardate_Result> sp_SelectFinicialyeardate(Nullable<int> company_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectFinicialyeardate_Result>("sp_SelectFinicialyeardate", company_idParameter);
        }
    
        public virtual ObjectResult<sp_SelectFY_Result> sp_SelectFY(Nullable<int> company_id, Nullable<int> branch_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectFY_Result>("sp_SelectFY", company_idParameter, branch_idParameter);
        }
    
        public virtual ObjectResult<sp_Selectgodown_Result> sp_Selectgodown(Nullable<int> company_id, Nullable<int> branch_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Selectgodown_Result>("sp_Selectgodown", company_idParameter, branch_idParameter);
        }
    
        public virtual ObjectResult<sp_SelectParty_Result> sp_SelectParty(Nullable<int> company_id, Nullable<int> branch_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectParty_Result>("sp_SelectParty", company_idParameter, branch_idParameter);
        }
    
        public virtual ObjectResult<sp_SelectPM_Result> sp_SelectPM(Nullable<int> company_id, Nullable<int> branch_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectPM_Result>("sp_SelectPM", company_idParameter, branch_idParameter);
        }
    
        public virtual ObjectResult<sp_SelectPrice_Result> sp_SelectPrice(Nullable<int> company_id, Nullable<int> product_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectPrice_Result>("sp_SelectPrice", company_idParameter, product_idParameter);
        }
    
        public virtual ObjectResult<sp_SelectProduct_Result> sp_SelectProduct(Nullable<int> company_id, Nullable<int> branch_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectProduct_Result>("sp_SelectProduct", company_idParameter, branch_idParameter);
        }
    
        public virtual ObjectResult<sp_SelectProductbyid_Result> sp_SelectProductbyid(Nullable<int> purchsae_id)
        {
            var purchsae_idParameter = purchsae_id.HasValue ?
                new ObjectParameter("purchsae_id", purchsae_id) :
                new ObjectParameter("purchsae_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectProductbyid_Result>("sp_SelectProductbyid", purchsae_idParameter);
        }
    
        public virtual int sp_SelectPurchase(Nullable<int> company_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SelectPurchase", company_idParameter);
        }
    
        public virtual ObjectResult<sp_selectpurchasebatch_Result> sp_selectpurchasebatch(Nullable<int> purchase_id, Nullable<int> product_id)
        {
            var purchase_idParameter = purchase_id.HasValue ?
                new ObjectParameter("purchase_id", purchase_id) :
                new ObjectParameter("purchase_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_selectpurchasebatch_Result>("sp_selectpurchasebatch", purchase_idParameter, product_idParameter);
        }
    
        public virtual ObjectResult<sp_SelectPurchaseinvoice_Result> sp_SelectPurchaseinvoice(Nullable<int> company_id, Nullable<int> party_id, string invoiceNumber, Nullable<System.DateTime> start_date, Nullable<System.DateTime> end_date)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var party_idParameter = party_id.HasValue ?
                new ObjectParameter("party_id", party_id) :
                new ObjectParameter("party_id", typeof(int));
    
            var invoiceNumberParameter = invoiceNumber != null ?
                new ObjectParameter("invoiceNumber", invoiceNumber) :
                new ObjectParameter("invoiceNumber", typeof(string));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            var end_dateParameter = end_date.HasValue ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectPurchaseinvoice_Result>("sp_SelectPurchaseinvoice", company_idParameter, party_idParameter, invoiceNumberParameter, start_dateParameter, end_dateParameter);
        }
    
        public virtual ObjectResult<sp_SelectPurchaseinvoicebyid_Result> sp_SelectPurchaseinvoicebyid(Nullable<int> purchsae_id, Nullable<int> company_id)
        {
            var purchsae_idParameter = purchsae_id.HasValue ?
                new ObjectParameter("purchsae_id", purchsae_id) :
                new ObjectParameter("purchsae_id", typeof(int));
    
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectPurchaseinvoicebyid_Result>("sp_SelectPurchaseinvoicebyid", purchsae_idParameter, company_idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_Selectquantity(Nullable<int> company_id, Nullable<int> product_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_Selectquantity", company_idParameter, product_idParameter);
        }
    
        public virtual ObjectResult<sp_SelectRack_Result> sp_SelectRack(Nullable<int> company_id, Nullable<int> branch_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectRack_Result>("sp_SelectRack", company_idParameter, branch_idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_Selectsaleid()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_Selectsaleid");
        }
    
        public virtual ObjectResult<sp_SelectSaleinvoice_Result> sp_SelectSaleinvoice(Nullable<int> sale_id, Nullable<int> company_id)
        {
            var sale_idParameter = sale_id.HasValue ?
                new ObjectParameter("sale_id", sale_id) :
                new ObjectParameter("sale_id", typeof(int));
    
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectSaleinvoice_Result>("sp_SelectSaleinvoice", sale_idParameter, company_idParameter);
        }
    
        public virtual ObjectResult<sp_Selectsaleproduct_Result> sp_Selectsaleproduct(Nullable<int> sale_id)
        {
            var sale_idParameter = sale_id.HasValue ?
                new ObjectParameter("sale_id", sale_id) :
                new ObjectParameter("sale_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Selectsaleproduct_Result>("sp_Selectsaleproduct", sale_idParameter);
        }
    
        public virtual ObjectResult<sp_SelectSalesReport_Result> sp_SelectSalesReport(Nullable<int> company_id, Nullable<int> partyid, string invoiceNumber, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> enddate)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var partyidParameter = partyid.HasValue ?
                new ObjectParameter("partyid", partyid) :
                new ObjectParameter("partyid", typeof(int));
    
            var invoiceNumberParameter = invoiceNumber != null ?
                new ObjectParameter("invoiceNumber", invoiceNumber) :
                new ObjectParameter("invoiceNumber", typeof(string));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectSalesReport_Result>("sp_SelectSalesReport", company_idParameter, partyidParameter, invoiceNumberParameter, fromdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<sp_selectspurchaseproduct_Result> sp_selectspurchaseproduct(Nullable<int> purchase_id)
        {
            var purchase_idParameter = purchase_id.HasValue ?
                new ObjectParameter("purchase_id", purchase_id) :
                new ObjectParameter("purchase_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_selectspurchaseproduct_Result>("sp_selectspurchaseproduct", purchase_idParameter);
        }
    
        public virtual ObjectResult<sp_SelectTax_Result> sp_SelectTax(Nullable<int> company_id, Nullable<int> branch_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectTax_Result>("sp_SelectTax", company_idParameter, branch_idParameter);
        }
    
        public virtual ObjectResult<sp_SelectTaxpercent_Result> sp_SelectTaxpercent(Nullable<int> company_id, Nullable<int> product_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectTaxpercent_Result>("sp_SelectTaxpercent", company_idParameter, product_idParameter);
        }
    
        public virtual ObjectResult<sp_SelectUnit_Result> sp_SelectUnit(Nullable<int> company_id, Nullable<int> branch_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectUnit_Result>("sp_SelectUnit", company_idParameter, branch_idParameter);
        }
    
        public virtual ObjectResult<sp_SelectUserRole_Result> sp_SelectUserRole(Nullable<int> company_id)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectUserRole_Result>("sp_SelectUserRole", company_idParameter);
        }
    
        public virtual int sp_taxInsert(Nullable<int> company_id, Nullable<int> branch_id, string tax_name, Nullable<decimal> tax_percentage, Nullable<bool> status, string created_by, Nullable<System.DateTime> created_date, string modified_by, Nullable<System.DateTime> modified_date)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var tax_nameParameter = tax_name != null ?
                new ObjectParameter("tax_name", tax_name) :
                new ObjectParameter("tax_name", typeof(string));
    
            var tax_percentageParameter = tax_percentage.HasValue ?
                new ObjectParameter("tax_percentage", tax_percentage) :
                new ObjectParameter("tax_percentage", typeof(decimal));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var modified_byParameter = modified_by != null ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(string));
    
            var modified_dateParameter = modified_date.HasValue ?
                new ObjectParameter("modified_date", modified_date) :
                new ObjectParameter("modified_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_taxInsert", company_idParameter, branch_idParameter, tax_nameParameter, tax_percentageParameter, statusParameter, created_byParameter, created_dateParameter, modified_byParameter, modified_dateParameter);
        }
    
        public virtual int sp_UnitInsert(Nullable<int> company_id, Nullable<int> branch_id, string unit_name, Nullable<bool> status, string created_by, Nullable<System.DateTime> created_date, string modified_by, Nullable<System.DateTime> modified_date)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var unit_nameParameter = unit_name != null ?
                new ObjectParameter("unit_name", unit_name) :
                new ObjectParameter("unit_name", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var created_byParameter = created_by != null ?
                new ObjectParameter("created_by", created_by) :
                new ObjectParameter("created_by", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var modified_byParameter = modified_by != null ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(string));
    
            var modified_dateParameter = modified_date.HasValue ?
                new ObjectParameter("modified_date", modified_date) :
                new ObjectParameter("modified_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UnitInsert", company_idParameter, branch_idParameter, unit_nameParameter, statusParameter, created_byParameter, created_dateParameter, modified_byParameter, modified_dateParameter);
        }
    
        public virtual int sp_Updatebatch(Nullable<int> company_id, Nullable<int> batch_id, Nullable<int> branch_id, string batch_name, string modified_by, Nullable<System.DateTime> modified_date)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var batch_idParameter = batch_id.HasValue ?
                new ObjectParameter("batch_id", batch_id) :
                new ObjectParameter("batch_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var batch_nameParameter = batch_name != null ?
                new ObjectParameter("batch_name", batch_name) :
                new ObjectParameter("batch_name", typeof(string));
    
            var modified_byParameter = modified_by != null ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(string));
    
            var modified_dateParameter = modified_date.HasValue ?
                new ObjectParameter("modified_date", modified_date) :
                new ObjectParameter("modified_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Updatebatch", company_idParameter, batch_idParameter, branch_idParameter, batch_nameParameter, modified_byParameter, modified_dateParameter);
        }
    
        public virtual int sp_UpdateBranch(Nullable<int> branch_id, Nullable<int> company_id, string branch_name, string branch_address, string pincode, string telephone_no, string fax_no, Nullable<int> country_id, Nullable<int> state_id, string city, string modified_by)
        {
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_nameParameter = branch_name != null ?
                new ObjectParameter("branch_name", branch_name) :
                new ObjectParameter("branch_name", typeof(string));
    
            var branch_addressParameter = branch_address != null ?
                new ObjectParameter("branch_address", branch_address) :
                new ObjectParameter("branch_address", typeof(string));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("pincode", pincode) :
                new ObjectParameter("pincode", typeof(string));
    
            var telephone_noParameter = telephone_no != null ?
                new ObjectParameter("telephone_no", telephone_no) :
                new ObjectParameter("telephone_no", typeof(string));
    
            var fax_noParameter = fax_no != null ?
                new ObjectParameter("fax_no", fax_no) :
                new ObjectParameter("fax_no", typeof(string));
    
            var country_idParameter = country_id.HasValue ?
                new ObjectParameter("country_id", country_id) :
                new ObjectParameter("country_id", typeof(int));
    
            var state_idParameter = state_id.HasValue ?
                new ObjectParameter("state_id", state_id) :
                new ObjectParameter("state_id", typeof(int));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var modified_byParameter = modified_by != null ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateBranch", branch_idParameter, company_idParameter, branch_nameParameter, branch_addressParameter, pincodeParameter, telephone_noParameter, fax_noParameter, country_idParameter, state_idParameter, cityParameter, modified_byParameter);
        }
    
        public virtual int sp_UpdateCategory(Nullable<int> company_id, Nullable<int> category_id, string category_name, string modified_by, Nullable<System.DateTime> modified_date)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var category_idParameter = category_id.HasValue ?
                new ObjectParameter("category_id", category_id) :
                new ObjectParameter("category_id", typeof(int));
    
            var category_nameParameter = category_name != null ?
                new ObjectParameter("category_name", category_name) :
                new ObjectParameter("category_name", typeof(string));
    
            var modified_byParameter = modified_by != null ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(string));
    
            var modified_dateParameter = modified_date.HasValue ?
                new ObjectParameter("modified_date", modified_date) :
                new ObjectParameter("modified_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateCategory", company_idParameter, category_idParameter, category_nameParameter, modified_byParameter, modified_dateParameter);
        }
    
        public virtual int sp_UpdateCompany(Nullable<int> company_id, string company_name, string company_address, Nullable<int> state_id, string city, string telephone_no, string fax_no, string website, string logo, string logo_name, string gSTIN, string modified_by, Nullable<System.DateTime> modified_date)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var company_nameParameter = company_name != null ?
                new ObjectParameter("company_name", company_name) :
                new ObjectParameter("company_name", typeof(string));
    
            var company_addressParameter = company_address != null ?
                new ObjectParameter("company_address", company_address) :
                new ObjectParameter("company_address", typeof(string));
    
            var state_idParameter = state_id.HasValue ?
                new ObjectParameter("state_id", state_id) :
                new ObjectParameter("state_id", typeof(int));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var telephone_noParameter = telephone_no != null ?
                new ObjectParameter("telephone_no", telephone_no) :
                new ObjectParameter("telephone_no", typeof(string));
    
            var fax_noParameter = fax_no != null ?
                new ObjectParameter("fax_no", fax_no) :
                new ObjectParameter("fax_no", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("website", website) :
                new ObjectParameter("website", typeof(string));
    
            var logoParameter = logo != null ?
                new ObjectParameter("logo", logo) :
                new ObjectParameter("logo", typeof(string));
    
            var logo_nameParameter = logo_name != null ?
                new ObjectParameter("logo_name", logo_name) :
                new ObjectParameter("logo_name", typeof(string));
    
            var gSTINParameter = gSTIN != null ?
                new ObjectParameter("GSTIN", gSTIN) :
                new ObjectParameter("GSTIN", typeof(string));
    
            var modified_byParameter = modified_by != null ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(string));
    
            var modified_dateParameter = modified_date.HasValue ?
                new ObjectParameter("modified_date", modified_date) :
                new ObjectParameter("modified_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateCompany", company_idParameter, company_nameParameter, company_addressParameter, state_idParameter, cityParameter, telephone_noParameter, fax_noParameter, websiteParameter, logoParameter, logo_nameParameter, gSTINParameter, modified_byParameter, modified_dateParameter);
        }
    
        public virtual int sp_UpdateExpense(Nullable<int> company_id, Nullable<int> branch_id, Nullable<int> expense_id, string expense_name, string modified_by, Nullable<System.DateTime> modified_date)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var expense_idParameter = expense_id.HasValue ?
                new ObjectParameter("expense_id", expense_id) :
                new ObjectParameter("expense_id", typeof(int));
    
            var expense_nameParameter = expense_name != null ?
                new ObjectParameter("expense_name", expense_name) :
                new ObjectParameter("expense_name", typeof(string));
    
            var modified_byParameter = modified_by != null ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(string));
    
            var modified_dateParameter = modified_date.HasValue ?
                new ObjectParameter("modified_date", modified_date) :
                new ObjectParameter("modified_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateExpense", company_idParameter, branch_idParameter, expense_idParameter, expense_nameParameter, modified_byParameter, modified_dateParameter);
        }
    
        public virtual int sp_UpdateFyear(Nullable<int> company_id, Nullable<int> financialyear_id, Nullable<int> branch_id, string start_date, string end_date, string modified_by, Nullable<System.DateTime> modified_date)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var financialyear_idParameter = financialyear_id.HasValue ?
                new ObjectParameter("financialyear_id", financialyear_id) :
                new ObjectParameter("financialyear_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var start_dateParameter = start_date != null ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(string));
    
            var end_dateParameter = end_date != null ?
                new ObjectParameter("end_date", end_date) :
                new ObjectParameter("end_date", typeof(string));
    
            var modified_byParameter = modified_by != null ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(string));
    
            var modified_dateParameter = modified_date.HasValue ?
                new ObjectParameter("modified_date", modified_date) :
                new ObjectParameter("modified_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateFyear", company_idParameter, financialyear_idParameter, branch_idParameter, start_dateParameter, end_dateParameter, modified_byParameter, modified_dateParameter);
        }
    
        public virtual int sp_UpdateGodown(Nullable<int> company_id, Nullable<int> branch_id, Nullable<int> godown_id, string godown_name, string godown_address, string contact_no, string contact_person, string modified_by, Nullable<System.DateTime> modified_date)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var godown_idParameter = godown_id.HasValue ?
                new ObjectParameter("godown_id", godown_id) :
                new ObjectParameter("godown_id", typeof(int));
    
            var godown_nameParameter = godown_name != null ?
                new ObjectParameter("godown_name", godown_name) :
                new ObjectParameter("godown_name", typeof(string));
    
            var godown_addressParameter = godown_address != null ?
                new ObjectParameter("godown_address", godown_address) :
                new ObjectParameter("godown_address", typeof(string));
    
            var contact_noParameter = contact_no != null ?
                new ObjectParameter("contact_no", contact_no) :
                new ObjectParameter("contact_no", typeof(string));
    
            var contact_personParameter = contact_person != null ?
                new ObjectParameter("contact_person", contact_person) :
                new ObjectParameter("contact_person", typeof(string));
    
            var modified_byParameter = modified_by != null ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(string));
    
            var modified_dateParameter = modified_date.HasValue ?
                new ObjectParameter("modified_date", modified_date) :
                new ObjectParameter("modified_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateGodown", company_idParameter, branch_idParameter, godown_idParameter, godown_nameParameter, godown_addressParameter, contact_noParameter, contact_personParameter, modified_byParameter, modified_dateParameter);
        }
    
        public virtual int sp_UpdateParty(Nullable<int> company_id, Nullable<int> branch_id, Nullable<int> party_id, Nullable<int> state_id, string party_name, string party_address, string contact_no, string party_type, string gstin_no, string modified_by, Nullable<System.DateTime> modified_date)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var party_idParameter = party_id.HasValue ?
                new ObjectParameter("party_id", party_id) :
                new ObjectParameter("party_id", typeof(int));
    
            var state_idParameter = state_id.HasValue ?
                new ObjectParameter("state_id", state_id) :
                new ObjectParameter("state_id", typeof(int));
    
            var party_nameParameter = party_name != null ?
                new ObjectParameter("party_name", party_name) :
                new ObjectParameter("party_name", typeof(string));
    
            var party_addressParameter = party_address != null ?
                new ObjectParameter("party_address", party_address) :
                new ObjectParameter("party_address", typeof(string));
    
            var contact_noParameter = contact_no != null ?
                new ObjectParameter("contact_no", contact_no) :
                new ObjectParameter("contact_no", typeof(string));
    
            var party_typeParameter = party_type != null ?
                new ObjectParameter("party_type", party_type) :
                new ObjectParameter("party_type", typeof(string));
    
            var gstin_noParameter = gstin_no != null ?
                new ObjectParameter("gstin_no", gstin_no) :
                new ObjectParameter("gstin_no", typeof(string));
    
            var modified_byParameter = modified_by != null ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(string));
    
            var modified_dateParameter = modified_date.HasValue ?
                new ObjectParameter("modified_date", modified_date) :
                new ObjectParameter("modified_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateParty", company_idParameter, branch_idParameter, party_idParameter, state_idParameter, party_nameParameter, party_addressParameter, contact_noParameter, party_typeParameter, gstin_noParameter, modified_byParameter, modified_dateParameter);
        }
    
        public virtual int Sp_UpdatePassword(Nullable<int> userid, string uniqueid, Nullable<System.DateTime> modify_date, string newpwd, Nullable<int> pid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var uniqueidParameter = uniqueid != null ?
                new ObjectParameter("uniqueid", uniqueid) :
                new ObjectParameter("uniqueid", typeof(string));
    
            var modify_dateParameter = modify_date.HasValue ?
                new ObjectParameter("modify_date", modify_date) :
                new ObjectParameter("modify_date", typeof(System.DateTime));
    
            var newpwdParameter = newpwd != null ?
                new ObjectParameter("newpwd", newpwd) :
                new ObjectParameter("newpwd", typeof(string));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_UpdatePassword", useridParameter, uniqueidParameter, modify_dateParameter, newpwdParameter, pidParameter);
        }
    
        public virtual int sp_UpdatePMode(Nullable<int> company_id, Nullable<int> branch_id, Nullable<int> paymentode_id, string paymentmode_name, string modified_by, Nullable<System.DateTime> modified_date)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var paymentode_idParameter = paymentode_id.HasValue ?
                new ObjectParameter("paymentode_id", paymentode_id) :
                new ObjectParameter("paymentode_id", typeof(int));
    
            var paymentmode_nameParameter = paymentmode_name != null ?
                new ObjectParameter("paymentmode_name", paymentmode_name) :
                new ObjectParameter("paymentmode_name", typeof(string));
    
            var modified_byParameter = modified_by != null ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(string));
    
            var modified_dateParameter = modified_date.HasValue ?
                new ObjectParameter("modified_date", modified_date) :
                new ObjectParameter("modified_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdatePMode", company_idParameter, branch_idParameter, paymentode_idParameter, paymentmode_nameParameter, modified_byParameter, modified_dateParameter);
        }
    
        public virtual int sp_UpdateProduct(Nullable<int> company_id, Nullable<int> branch_id, Nullable<int> product_id, Nullable<int> category_id, Nullable<int> rack_id, Nullable<int> godown_id, Nullable<int> tax_id, Nullable<int> unit_id, Nullable<int> reorder_level, Nullable<decimal> purchas_price, Nullable<decimal> sales_price, string product_code, string hsn_code, string product_name, string modified_by, Nullable<System.DateTime> modified_date)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var category_idParameter = category_id.HasValue ?
                new ObjectParameter("category_id", category_id) :
                new ObjectParameter("category_id", typeof(int));
    
            var rack_idParameter = rack_id.HasValue ?
                new ObjectParameter("rack_id", rack_id) :
                new ObjectParameter("rack_id", typeof(int));
    
            var godown_idParameter = godown_id.HasValue ?
                new ObjectParameter("godown_id", godown_id) :
                new ObjectParameter("godown_id", typeof(int));
    
            var tax_idParameter = tax_id.HasValue ?
                new ObjectParameter("tax_id", tax_id) :
                new ObjectParameter("tax_id", typeof(int));
    
            var unit_idParameter = unit_id.HasValue ?
                new ObjectParameter("unit_id", unit_id) :
                new ObjectParameter("unit_id", typeof(int));
    
            var reorder_levelParameter = reorder_level.HasValue ?
                new ObjectParameter("reorder_level", reorder_level) :
                new ObjectParameter("reorder_level", typeof(int));
    
            var purchas_priceParameter = purchas_price.HasValue ?
                new ObjectParameter("purchas_price", purchas_price) :
                new ObjectParameter("purchas_price", typeof(decimal));
    
            var sales_priceParameter = sales_price.HasValue ?
                new ObjectParameter("sales_price", sales_price) :
                new ObjectParameter("sales_price", typeof(decimal));
    
            var product_codeParameter = product_code != null ?
                new ObjectParameter("product_code", product_code) :
                new ObjectParameter("product_code", typeof(string));
    
            var hsn_codeParameter = hsn_code != null ?
                new ObjectParameter("hsn_code", hsn_code) :
                new ObjectParameter("hsn_code", typeof(string));
    
            var product_nameParameter = product_name != null ?
                new ObjectParameter("product_name", product_name) :
                new ObjectParameter("product_name", typeof(string));
    
            var modified_byParameter = modified_by != null ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(string));
    
            var modified_dateParameter = modified_date.HasValue ?
                new ObjectParameter("modified_date", modified_date) :
                new ObjectParameter("modified_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateProduct", company_idParameter, branch_idParameter, product_idParameter, category_idParameter, rack_idParameter, godown_idParameter, tax_idParameter, unit_idParameter, reorder_levelParameter, purchas_priceParameter, sales_priceParameter, product_codeParameter, hsn_codeParameter, product_nameParameter, modified_byParameter, modified_dateParameter);
        }
    
        public virtual int sp_UpdatePurchase(Nullable<int> purchase_id, Nullable<int> count, Nullable<int> company_id, Nullable<int> party_id, string po_no, Nullable<decimal> total_tax, Nullable<decimal> actual_amount, Nullable<decimal> grand_total, Nullable<decimal> discount, string modified_by, string modifie_date)
        {
            var purchase_idParameter = purchase_id.HasValue ?
                new ObjectParameter("purchase_id", purchase_id) :
                new ObjectParameter("purchase_id", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var party_idParameter = party_id.HasValue ?
                new ObjectParameter("party_id", party_id) :
                new ObjectParameter("party_id", typeof(int));
    
            var po_noParameter = po_no != null ?
                new ObjectParameter("po_no", po_no) :
                new ObjectParameter("po_no", typeof(string));
    
            var total_taxParameter = total_tax.HasValue ?
                new ObjectParameter("total_tax", total_tax) :
                new ObjectParameter("total_tax", typeof(decimal));
    
            var actual_amountParameter = actual_amount.HasValue ?
                new ObjectParameter("actual_amount", actual_amount) :
                new ObjectParameter("actual_amount", typeof(decimal));
    
            var grand_totalParameter = grand_total.HasValue ?
                new ObjectParameter("grand_total", grand_total) :
                new ObjectParameter("grand_total", typeof(decimal));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("discount", discount) :
                new ObjectParameter("discount", typeof(decimal));
    
            var modified_byParameter = modified_by != null ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(string));
    
            var modifie_dateParameter = modifie_date != null ?
                new ObjectParameter("modifie_date", modifie_date) :
                new ObjectParameter("modifie_date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdatePurchase", purchase_idParameter, countParameter, company_idParameter, party_idParameter, po_noParameter, total_taxParameter, actual_amountParameter, grand_totalParameter, discountParameter, modified_byParameter, modifie_dateParameter);
        }
    
        public virtual int sp_UpdatePurchasedetails(Nullable<int> purchasedetails_id, Nullable<int> product_id, Nullable<int> purchase_id, Nullable<int> batch_id, Nullable<decimal> tax_amt, Nullable<decimal> dicount_amt, Nullable<decimal> quantity, Nullable<decimal> amount, Nullable<decimal> purchase_rate, Nullable<decimal> sale_rate, string modified_by, string modifie_date)
        {
            var purchasedetails_idParameter = purchasedetails_id.HasValue ?
                new ObjectParameter("purchasedetails_id", purchasedetails_id) :
                new ObjectParameter("purchasedetails_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var purchase_idParameter = purchase_id.HasValue ?
                new ObjectParameter("purchase_id", purchase_id) :
                new ObjectParameter("purchase_id", typeof(int));
    
            var batch_idParameter = batch_id.HasValue ?
                new ObjectParameter("batch_id", batch_id) :
                new ObjectParameter("batch_id", typeof(int));
    
            var tax_amtParameter = tax_amt.HasValue ?
                new ObjectParameter("tax_amt", tax_amt) :
                new ObjectParameter("tax_amt", typeof(decimal));
    
            var dicount_amtParameter = dicount_amt.HasValue ?
                new ObjectParameter("dicount_amt", dicount_amt) :
                new ObjectParameter("dicount_amt", typeof(decimal));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(decimal));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var purchase_rateParameter = purchase_rate.HasValue ?
                new ObjectParameter("purchase_rate", purchase_rate) :
                new ObjectParameter("purchase_rate", typeof(decimal));
    
            var sale_rateParameter = sale_rate.HasValue ?
                new ObjectParameter("sale_rate", sale_rate) :
                new ObjectParameter("sale_rate", typeof(decimal));
    
            var modified_byParameter = modified_by != null ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(string));
    
            var modifie_dateParameter = modifie_date != null ?
                new ObjectParameter("modifie_date", modifie_date) :
                new ObjectParameter("modifie_date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdatePurchasedetails", purchasedetails_idParameter, product_idParameter, purchase_idParameter, batch_idParameter, tax_amtParameter, dicount_amtParameter, quantityParameter, amountParameter, purchase_rateParameter, sale_rateParameter, modified_byParameter, modifie_dateParameter);
        }
    
        public virtual int sp_UpdateRack(Nullable<int> company_id, Nullable<int> branch_id, Nullable<int> rack_id, Nullable<int> godown_id, string rack_name, string modified_by, Nullable<System.DateTime> modified_date)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var rack_idParameter = rack_id.HasValue ?
                new ObjectParameter("rack_id", rack_id) :
                new ObjectParameter("rack_id", typeof(int));
    
            var godown_idParameter = godown_id.HasValue ?
                new ObjectParameter("godown_id", godown_id) :
                new ObjectParameter("godown_id", typeof(int));
    
            var rack_nameParameter = rack_name != null ?
                new ObjectParameter("rack_name", rack_name) :
                new ObjectParameter("rack_name", typeof(string));
    
            var modified_byParameter = modified_by != null ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(string));
    
            var modified_dateParameter = modified_date.HasValue ?
                new ObjectParameter("modified_date", modified_date) :
                new ObjectParameter("modified_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateRack", company_idParameter, branch_idParameter, rack_idParameter, godown_idParameter, rack_nameParameter, modified_byParameter, modified_dateParameter);
        }
    
        public virtual int sp_UpdateSale(Nullable<int> sale_id, Nullable<int> count, Nullable<int> company_id, Nullable<int> party_id, string invoice_no, Nullable<decimal> total_tax, Nullable<decimal> actual_amount, Nullable<decimal> grand_total, Nullable<decimal> discount, string modified_by, string modifie_date)
        {
            var sale_idParameter = sale_id.HasValue ?
                new ObjectParameter("sale_id", sale_id) :
                new ObjectParameter("sale_id", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var party_idParameter = party_id.HasValue ?
                new ObjectParameter("party_id", party_id) :
                new ObjectParameter("party_id", typeof(int));
    
            var invoice_noParameter = invoice_no != null ?
                new ObjectParameter("invoice_no", invoice_no) :
                new ObjectParameter("invoice_no", typeof(string));
    
            var total_taxParameter = total_tax.HasValue ?
                new ObjectParameter("total_tax", total_tax) :
                new ObjectParameter("total_tax", typeof(decimal));
    
            var actual_amountParameter = actual_amount.HasValue ?
                new ObjectParameter("actual_amount", actual_amount) :
                new ObjectParameter("actual_amount", typeof(decimal));
    
            var grand_totalParameter = grand_total.HasValue ?
                new ObjectParameter("grand_total", grand_total) :
                new ObjectParameter("grand_total", typeof(decimal));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("discount", discount) :
                new ObjectParameter("discount", typeof(decimal));
    
            var modified_byParameter = modified_by != null ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(string));
    
            var modifie_dateParameter = modifie_date != null ?
                new ObjectParameter("modifie_date", modifie_date) :
                new ObjectParameter("modifie_date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateSale", sale_idParameter, countParameter, company_idParameter, party_idParameter, invoice_noParameter, total_taxParameter, actual_amountParameter, grand_totalParameter, discountParameter, modified_byParameter, modifie_dateParameter);
        }
    
        public virtual int sp_Updatesaledetail(Nullable<int> saledetails_id, Nullable<int> product_id, Nullable<int> sale_id, Nullable<int> batch_id, Nullable<decimal> tax_amt, Nullable<decimal> dicount_amt, Nullable<decimal> quantity, Nullable<decimal> amount, Nullable<decimal> price, string modified_by, string modifie_date)
        {
            var saledetails_idParameter = saledetails_id.HasValue ?
                new ObjectParameter("saledetails_id", saledetails_id) :
                new ObjectParameter("saledetails_id", typeof(int));
    
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var sale_idParameter = sale_id.HasValue ?
                new ObjectParameter("sale_id", sale_id) :
                new ObjectParameter("sale_id", typeof(int));
    
            var batch_idParameter = batch_id.HasValue ?
                new ObjectParameter("batch_id", batch_id) :
                new ObjectParameter("batch_id", typeof(int));
    
            var tax_amtParameter = tax_amt.HasValue ?
                new ObjectParameter("tax_amt", tax_amt) :
                new ObjectParameter("tax_amt", typeof(decimal));
    
            var dicount_amtParameter = dicount_amt.HasValue ?
                new ObjectParameter("dicount_amt", dicount_amt) :
                new ObjectParameter("dicount_amt", typeof(decimal));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(decimal));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(decimal));
    
            var modified_byParameter = modified_by != null ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(string));
    
            var modifie_dateParameter = modifie_date != null ?
                new ObjectParameter("modifie_date", modifie_date) :
                new ObjectParameter("modifie_date", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Updatesaledetail", saledetails_idParameter, product_idParameter, sale_idParameter, batch_idParameter, tax_amtParameter, dicount_amtParameter, quantityParameter, amountParameter, priceParameter, modified_byParameter, modifie_dateParameter);
        }
    
        public virtual int sp_Updatestockquantity(Nullable<int> product_id, Nullable<int> quantity, Nullable<int> company_id)
        {
            var product_idParameter = product_id.HasValue ?
                new ObjectParameter("product_id", product_id) :
                new ObjectParameter("product_id", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Updatestockquantity", product_idParameter, quantityParameter, company_idParameter);
        }
    
        public virtual int sp_updatesubscription(Nullable<int> company_id, Nullable<int> user_id, Nullable<int> plan_id, Nullable<int> transaction_id, Nullable<decimal> paidamount, Nullable<System.DateTime> start_date)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var plan_idParameter = plan_id.HasValue ?
                new ObjectParameter("plan_id", plan_id) :
                new ObjectParameter("plan_id", typeof(int));
    
            var transaction_idParameter = transaction_id.HasValue ?
                new ObjectParameter("transaction_id", transaction_id) :
                new ObjectParameter("transaction_id", typeof(int));
    
            var paidamountParameter = paidamount.HasValue ?
                new ObjectParameter("paidamount", paidamount) :
                new ObjectParameter("paidamount", typeof(decimal));
    
            var start_dateParameter = start_date.HasValue ?
                new ObjectParameter("start_date", start_date) :
                new ObjectParameter("start_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updatesubscription", company_idParameter, user_idParameter, plan_idParameter, transaction_idParameter, paidamountParameter, start_dateParameter);
        }
    
        public virtual int sp_UpdateTax(Nullable<int> company_id, Nullable<int> branch_id, Nullable<int> tax_id, string tax_name, Nullable<decimal> tax_percentage, string modified_by, Nullable<System.DateTime> modified_date)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var tax_idParameter = tax_id.HasValue ?
                new ObjectParameter("tax_id", tax_id) :
                new ObjectParameter("tax_id", typeof(int));
    
            var tax_nameParameter = tax_name != null ?
                new ObjectParameter("tax_name", tax_name) :
                new ObjectParameter("tax_name", typeof(string));
    
            var tax_percentageParameter = tax_percentage.HasValue ?
                new ObjectParameter("tax_percentage", tax_percentage) :
                new ObjectParameter("tax_percentage", typeof(decimal));
    
            var modified_byParameter = modified_by != null ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(string));
    
            var modified_dateParameter = modified_date.HasValue ?
                new ObjectParameter("modified_date", modified_date) :
                new ObjectParameter("modified_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateTax", company_idParameter, branch_idParameter, tax_idParameter, tax_nameParameter, tax_percentageParameter, modified_byParameter, modified_dateParameter);
        }
    
        public virtual int sp_UpdateUnit(Nullable<int> company_id, Nullable<int> branch_id, Nullable<int> unit_id, string unit_name, string modified_by, Nullable<System.DateTime> modified_date)
        {
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var unit_idParameter = unit_id.HasValue ?
                new ObjectParameter("unit_id", unit_id) :
                new ObjectParameter("unit_id", typeof(int));
    
            var unit_nameParameter = unit_name != null ?
                new ObjectParameter("unit_name", unit_name) :
                new ObjectParameter("unit_name", typeof(string));
    
            var modified_byParameter = modified_by != null ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(string));
    
            var modified_dateParameter = modified_date.HasValue ?
                new ObjectParameter("modified_date", modified_date) :
                new ObjectParameter("modified_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateUnit", company_idParameter, branch_idParameter, unit_idParameter, unit_nameParameter, modified_byParameter, modified_dateParameter);
        }
    
        public virtual int sp_UpdateUser(Nullable<int> userbranch_id, Nullable<int> user_id, string user_name, string user_emailid, string user_mobileno, Nullable<int> role_id, Nullable<int> branch_id, Nullable<int> company_id, Nullable<bool> status, string modified_by, Nullable<System.DateTime> modified_date, string first_name, string last_name)
        {
            var userbranch_idParameter = userbranch_id.HasValue ?
                new ObjectParameter("userbranch_id", userbranch_id) :
                new ObjectParameter("userbranch_id", typeof(int));
    
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var user_nameParameter = user_name != null ?
                new ObjectParameter("user_name", user_name) :
                new ObjectParameter("user_name", typeof(string));
    
            var user_emailidParameter = user_emailid != null ?
                new ObjectParameter("user_emailid", user_emailid) :
                new ObjectParameter("user_emailid", typeof(string));
    
            var user_mobilenoParameter = user_mobileno != null ?
                new ObjectParameter("user_mobileno", user_mobileno) :
                new ObjectParameter("user_mobileno", typeof(string));
    
            var role_idParameter = role_id.HasValue ?
                new ObjectParameter("role_id", role_id) :
                new ObjectParameter("role_id", typeof(int));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            var company_idParameter = company_id.HasValue ?
                new ObjectParameter("company_id", company_id) :
                new ObjectParameter("company_id", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var modified_byParameter = modified_by != null ?
                new ObjectParameter("modified_by", modified_by) :
                new ObjectParameter("modified_by", typeof(string));
    
            var modified_dateParameter = modified_date.HasValue ?
                new ObjectParameter("modified_date", modified_date) :
                new ObjectParameter("modified_date", typeof(System.DateTime));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateUser", userbranch_idParameter, user_idParameter, user_nameParameter, user_emailidParameter, user_mobilenoParameter, role_idParameter, branch_idParameter, company_idParameter, statusParameter, modified_byParameter, modified_dateParameter, first_nameParameter, last_nameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Nullable<int>> spAuthenticateUser(string user_name, string password)
        {
            var user_nameParameter = user_name != null ?
                new ObjectParameter("user_name", user_name) :
                new ObjectParameter("user_name", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spAuthenticateUser", user_nameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<spAuthenticateUserRole_Result> spAuthenticateUserRole(Nullable<int> user_id)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAuthenticateUserRole_Result>("spAuthenticateUserRole", user_idParameter);
        }
    
        public virtual int spCheckDoubleInMasters(Nullable<int> companyid, string tableName, string columnName, string valueToCheck, Nullable<int> branch_id)
        {
            var companyidParameter = companyid.HasValue ?
                new ObjectParameter("companyid", companyid) :
                new ObjectParameter("companyid", typeof(int));
    
            var tableNameParameter = tableName != null ?
                new ObjectParameter("tableName", tableName) :
                new ObjectParameter("tableName", typeof(string));
    
            var columnNameParameter = columnName != null ?
                new ObjectParameter("columnName", columnName) :
                new ObjectParameter("columnName", typeof(string));
    
            var valueToCheckParameter = valueToCheck != null ?
                new ObjectParameter("ValueToCheck", valueToCheck) :
                new ObjectParameter("ValueToCheck", typeof(string));
    
            var branch_idParameter = branch_id.HasValue ?
                new ObjectParameter("branch_id", branch_id) :
                new ObjectParameter("branch_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCheckDoubleInMasters", companyidParameter, tableNameParameter, columnNameParameter, valueToCheckParameter, branch_idParameter);
        }
    
        public virtual ObjectResult<string> SpGetExistsEmail(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SpGetExistsEmail", emailParameter);
        }
    
        public virtual ObjectResult<string> SpGetExistsMobile(string mobileno)
        {
            var mobilenoParameter = mobileno != null ?
                new ObjectParameter("mobileno", mobileno) :
                new ObjectParameter("mobileno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SpGetExistsMobile", mobilenoParameter);
        }
    
        [DbFunction("IMS_TESTEntities", "Split")]
        public virtual IQueryable<Split_Result> Split(string list, string splitOn)
        {
            var listParameter = list != null ?
                new ObjectParameter("List", list) :
                new ObjectParameter("List", typeof(string));
    
            var splitOnParameter = splitOn != null ?
                new ObjectParameter("SplitOn", splitOn) :
                new ObjectParameter("SplitOn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Split_Result>("[IMS_TESTEntities].[Split](@List, @SplitOn)", listParameter, splitOnParameter);
        }
    }
}
