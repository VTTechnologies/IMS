using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using IMSBLL.EntityModel;

namespace IMSBLL.DAL
{
   public class OrderNo
    {
       IMS_TESTEntities context = new IMS_TESTEntities();


       public string GenerateInvoicenumber( int companyId,int branchId,string invoiceNumberFor)
       {
           string order=string.Empty;
           InvoiceViewModel invoiceViewModel = new InvoiceViewModel();
           if (invoiceNumberFor == "Purchase")
           {
               invoiceViewModel = (from s in context.tbl_purchase
                                   join f in context.tbl_financialyear on s.company_id equals f.company_id
                                   where s.company_id == companyId && s.company_id == companyId && s.status == true && f.status == true && f.company_id == companyId
                                   orderby s.purchase_id descending
                                   select new InvoiceViewModel
                                   {
                                       InvoiceNumber = s.InvoiceNumber,
                                       StartDate = f.start_date,
                                       EndDate = f.end_date
                                   }).Take(1).FirstOrDefault();
           }
           else if (invoiceNumberFor == "Sale")
           {
               invoiceViewModel = (from s in context.tbl_sale
                                   join f in context.tbl_financialyear on s.company_id equals f.company_id
                                   where s.company_id == companyId && s.company_id == companyId && s.status == true && f.status == true && f.company_id == companyId
                                   orderby s.sale_id descending
                                   select new InvoiceViewModel
                                   {
                                       InvoiceNumber = s.InvoiceNumber,
                                       StartDate = f.start_date,
                                       EndDate = f.end_date
                                   }).Take(1).FirstOrDefault();
           }          

            int cyear = DateTime.Now.Year;
            string ordernumber = Convert.ToString(invoiceViewModel.InvoiceNumber);

          
           
            if (!string.IsNullOrEmpty(ordernumber))
            {
                int a ;
                if (Convert.ToDateTime(invoiceViewModel.StartDate) == DateTime.Now)
                {
                    a = 0;
                }
                else
                {
                    a=Convert.ToInt32(ordernumber.Substring(5));
                }
                string orderNo = string.Format("{0:0000}", ++a);
                order = cyear + "P" + orderNo;

            }
            else
            {
                string orderNo = string.Format("{0:0000}",0);
                order = cyear + "P" + orderNo;
            }
            return order;
       }
    }
   public class InvoiceViewModel
   {
       public string InvoiceNumber { get; set; }
       public string StartDate { get; set; }
       public string EndDate { get; set; }
   }

}
