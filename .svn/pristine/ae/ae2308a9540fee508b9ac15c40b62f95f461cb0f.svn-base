using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using System.Data.SqlClient;
using IMSBLL.EntityModel;
using IMSBLL.DAL;

namespace IMS
{
    public partial class FinincialYear : System.Web.UI.Page
    {
        /// <summary>
        /// All The objects That are used in coding
        /// </summary>
        #region object
        IMS2Entities context = new IMS2Entities();
        #endregion
        protected void Page_Load(object sender, EventArgs e)
        {
            try
            {
                if (!IsPostBack)
                {
                    //loadDataTable();
                }
            }
                   catch (Exception ex)
            {

                ErrorLog.saveerror(ex);
                //Do Logging
            }
        }

        /// <summary>
        /// All The Methods That are used in coding
        /// </summary>

        #region Methods
        private void loadDataTable()
        {
            int c_id = Convert.ToInt32(Session["company_id"]);
            int b_id = Convert.ToInt32(Session["branch_id"]);
            GridView1.DataSource = context.sp_SelectFY(c_id,b_id); ;
            GridView1.DataBind();
        }
        [System.Web.Services.WebMethod]
        public static string CheckDouble(string useroremail)
        {
            try
            {
                if (HttpContext.Current.Session["company_id"] != null)
                {
                    SqlHelper helper = new SqlHelper();
                    DataTable data = helper.CheckDoubleValues(Convert.ToInt32(HttpContext.Current.Session["company_id"]), Convert.ToInt32(HttpContext.Current.Session["branch_id"]), "tbl_financialyear", "start_date", useroremail);
                    if (data.Rows.Count > 0)
                    {
                        return "true";
                    }
                    else
                    {
                        return "false";
                    }
                }
            }
            catch (Exception ex)
            {
                ErrorLog.saveerror(ex);
            }
            return "true";
        }
        [System.Web.Services.WebMethod]
        public static string CheckDouble1(string useroremail)
        {
            try
            {
                if (HttpContext.Current.Session["company_id"] != null)
                {
                    SqlHelper helper = new SqlHelper();
                    DataTable data = helper.CheckDoubleValues(Convert.ToInt32(HttpContext.Current.Session["company_id"]), Convert.ToInt32(HttpContext.Current.Session["branch_id"]), "tbl_financialyear", "end_date", useroremail);
                    if (data.Rows.Count > 0)
                    {
                        return "true";
                    }
                    else
                    {
                        return "false";
                    }
                }
            }
            catch (Exception ex)
            {
                ErrorLog.saveerror(ex);
            }
            return "true";
        }


        public void savedlogic()
        {
            try
            {
                //if(hd.Value=="false" && hd12.Value=="false")
                //{
                int c_id = Convert.ToInt32(Session["company_id"]);
                int b_id = Convert.ToInt32(Session["branch_id"]);
                string User_id = Convert.ToString(Session["UserID"]);
                tbl_financialyear cat = new tbl_financialyear();


                cat.branch_id = b_id;
                cat.company_id = c_id;
                cat.start_date = txtStartdate.Text;
                cat.end_date = txtEndDate.Text;
                //cat.created_by = "admin";
                cat.created_by = User_id;
                cat.created_date = DateTime.Today;
                cat.Insert(cat);
                //loadDataTable();

                divalert.Visible = true;
                lblAlert.Text = "Financial year Saved Successfully ";
                //}
                //else
                //{
                //    divalert.Visible = true;
                //    lblAlert.ForeColor = System.Drawing.Color.Red;
                //    lblAlert.Text = "Please Choose Another Date";
                //}

            }
            catch (Exception ex)
            {

                ErrorLog.saveerror(ex);
                //Do Logging
            }
        }

        public void updataelogic()
        {
            try
            {
                int c_id = Convert.ToInt32(Session["company_id"]);
                int b_id = Convert.ToInt32(Session["branch_id"]);
                string User_id = Convert.ToString(Session["UserID"]);
                GridViewRow row = GridView1.SelectedRow;
                int financialyear_id = Convert.ToInt32(ViewState["unit_id"]);
                context.sp_UpdateFyear(c_id, financialyear_id, b_id, txtStartdate.Text, txtEndDate.Text, User_id, DateTime.Today);
                btnUpdate.Visible = false;
                btnSave.Visible = true;

                loadDataTable();

                divalert.Visible = true;
                lblAlert.Text = "Financial year Updated Successfully";
            }
            catch (Exception ex)
            {

                ErrorLog.saveerror(ex);
                //Do Logging
            }
        }
        #endregion

        /// <summary>
        /// All The Events That are used in coding
        /// </summary>

        #region Events
        protected void btnSave_Click(object sender, EventArgs e)
        {
            savedlogic();   
        }

        protected void GridView1_RowCommand(object sender, GridViewCommandEventArgs e)
        {
            try
            {
                if (e.CommandName == "DeleteRow")
                {
                    int c_id = Convert.ToInt32(Session["company_id"]);
                    int b_id = Convert.ToInt32(Session["branch_id"]);
                    ViewState["unit_id"] = Convert.ToInt32(e.CommandArgument);
                    divalert.Visible = false;
                    ClientScript.RegisterStartupScript(this.GetType(), "Pop", "openModal();", true);

                    loadDataTable();
                }
                else if (e.CommandName == "UpdateRow")
                {
                    int rowIndex = ((GridViewRow)((ImageButton)e.CommandSource).NamingContainer).RowIndex;
                    GridViewRow row = GridView1.Rows[rowIndex];

                    ViewState["unit_id"] = Convert.ToInt32(GridView1.DataKeys[row.RowIndex].Value);
                    //int taxId = GridView1.SelectedIndex;

                    txtStartdate.Text = row.Cells[0].Text;
                    txtEndDate.Text = row.Cells[1].Text;
                    btnSave.Visible = false;
                    btnUpdate.Visible = true;
                    divalert.Visible = false;
                    loadDataTable();
                }
            }

               catch (Exception ex)
            {

                ErrorLog.saveerror(ex);
                //Do Logging
            }
        }

        protected void btnUpdate_Click(object sender, EventArgs e)
        {
            updataelogic();
        }

        protected void btnYes_Click(object sender, EventArgs e)
        {
            try
            {
                int c_id = Convert.ToInt32(Session["company_id"]);
                int b_id = Convert.ToInt32(Session["branch_id"]);
                int rowIndex = Convert.ToInt32(ViewState["unit_id"]);
                context.sp_DeleteFyear(c_id, b_id, rowIndex);

                divalert.Visible = true;
                lblAlert.Text = "Financial year Deleted Successfully ";
                loadDataTable();
            }
            catch (Exception ex)
            {

                ErrorLog.saveerror(ex);
                //Do Logging
            }
        }

        protected void btnCancel_Click(object sender, EventArgs e)
        {
            try
            {
                btnSave.Visible = true;
                btnUpdate.Visible = false;
                divalert.Visible = false;
                
                ViewState["gridrow"] = null;
            }
            catch (Exception ex)
            {
                ErrorLog.saveerror(ex);
            }
        }

        #endregion
    }
}